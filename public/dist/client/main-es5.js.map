{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/breakdownhistory/breakdownhistory.component.html","src/app/dashboard/dashboard.component.html","src/app/driver/driver.component.html","src/app/forgot-password/forgot-password.component.html","src/app/login/login.component.html","src/app/messagebox/messagebox.component.html","src/app/profile-popup/profile-popup.component.html","src/app/route/route.component.html","src/app/sidebar/sidebar.component.html","src/app/tracker/tracker.component.html","src/app/user-profile/user-profile.component.html","src/app/vehicle/vehicle.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/auth.guard.ts","src/app/breakdownhistory/breakdownhistory.component.css","src/app/breakdownhistory/breakdownhistory.component.ts","src/app/dashboard/dashboard.component.css","src/app/dashboard/dashboard.component.ts","src/app/driver/driver.component.css","src/app/driver/driver.component.ts","src/app/forgot-password/forgot-password.component.css","src/app/forgot-password/forgot-password.component.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/messagebox/messagebox.component.css","src/app/messagebox/messagebox.component.ts","src/app/models/app-enums.ts","src/app/models/breakdown-history.ts","src/app/models/driver.ts","src/app/models/route.ts","src/app/models/tracker.ts","src/app/models/user.ts","src/app/models/vehicle.ts","src/app/profile-popup/profile-popup.component.css","src/app/profile-popup/profile-popup.component.ts","src/app/route/route.component.css","src/app/route/route.component.ts","src/app/services/auth.service.ts","src/app/services/breakdown-history.service.ts","src/app/services/core.service.ts","src/app/services/dashboard.service.ts","src/app/services/driver.service.ts","src/app/services/fuel-type.service.ts","src/app/services/messagebox.service.ts","src/app/services/notification.service.ts","src/app/services/profile-popup.service.ts","src/app/services/route.service.ts","src/app/services/tracker.service.ts","src/app/services/user.service.ts","src/app/services/vehicle.service.ts","src/app/sidebar/sidebar.component.css","src/app/sidebar/sidebar.component.ts","src/app/tracker/tracker.component.css","src/app/tracker/tracker.component.ts","src/app/user-profile/user-profile.component.css","src/app/user-profile/user-profile.component.ts","src/app/vehicle/vehicle.component.css","src/app/vehicle/vehicle.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"wrapper\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<footer class=\\\"text-muted\\\">\\n  <p class=\\\"text-center text-md-right text-lg-center\\\">\\n    <cite>ABC</cite> Transport company vehicle logistics, all &copy; reserved. since {{appYear}}\\n  </p>\\n</footer>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 ml-auto\\\">\\n      <div>\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faHistory\\\"></fa-icon>\\n            Breakdown Histories\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            New Breakdown History\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\" placeholder=\\\"Search by engineNo.\\\"\\n                        [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-lg\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Driver Name</th>\\n                      <th>Vehicle Engine No.</th>\\n                      <th>Description</th>\\n                      <th>Breakdown Date</th>\\n                      <th>Repair Date</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let history of breakdownHistories; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{history.Driver.firstName}} {{history.Driver.lastName}}</td>\\n                      <td>{{history.Vehicle.engineNo}}</td>\\n                      <td>{{history.description}}</td>\\n                      <td>{{history.breakdownDate | date}}</td>\\n                      <td>{{history.repairDate | date}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(history)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit breakdown details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(history)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete breakdown details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <div *ngIf=\\\"isLoading\\\" class=\\\"text-center\\\">\\n                  <span>\\n                    <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                    Loading Routes\\n                  </span>\\n                </div>\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  Add New Breakdown\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Breakdown\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #breakdownForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <textarea name=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Breakdown Description\\\"\\n                      [(ngModel)]=\\\"newBreakdownHistory.description\\\" required></textarea>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"driverId\\\"\\n                      [(ngModel)]=\\\"newBreakdownHistory.driverId\\\" required>\\n                      <option [value]=\\\"null\\\">Select Driver</option>\\n                      <option [value]=\\\"driver.id\\\" *ngFor=\\\"let driver of drivers\\\">\\n                        {{driver.firstName}} {{driver.lastName}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"vehicleId\\\"\\n                      [(ngModel)]=\\\"newBreakdownHistory.vehicleId\\\" required>\\n                      <option [value]=\\\"null\\\">Select Vehicle</option>\\n                      <option [value]=\\\"vehicle.id\\\" *ngFor=\\\"let vehicle of vehicles\\\">\\n                        {{vehicle.engineNo}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-control-custom form-control d-flex align-items-center\\\">\\n                      <input type=\\\"text\\\" name=\\\"breakdownDate\\\" class=\\\"w-100\\\" placeholder=\\\"Breakdown Date\\\"\\n                        [(ngModel)]=\\\"breakdownDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" required readonly\\n                        aria-readonly=\\\"true\\\" />\\n                      <label (click)=\\\"d.toggle()\\\" class=\\\"mb-0 text-info\\\">\\n                        <fa-icon [icon]=\\\"faCalendar\\\"></fa-icon>\\n                      </label>\\n                    </div>\\n\\n                  </div>\\n                  <div class=\\\"form-group\\\" *ngIf=\\\"isEditMode\\\">\\n                    <div class=\\\"form-control-custom form-control d-flex align-items-center\\\">\\n                      <input type=\\\"text\\\" name=\\\"repairDate\\\" class=\\\"w-100\\\" placeholder=\\\"Repair Date\\\"\\n                        [(ngModel)]=\\\"repairDate\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\" readonly aria-readonly=\\\"true\\\" />\\n                      <label (click)=\\\"d1.toggle()\\\" class=\\\"mb-0 text-info\\\">\\n                        <fa-icon [icon]=\\\"faCalendar\\\"></fa-icon>\\n                      </label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!breakdownForm.form.valid\\\"\\n                      (click)=\\\"saveBreakdown()\\\" *ngIf=\\\"isNewItemMode\\\">\\n                      Save Breakdown\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!breakdownForm.form.valid\\\"\\n                      (click)=\\\"updateBreakdown()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Breakdown\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"d-flex justify-content-between mt-2\\\">\\n    <h4 class=\\\"text-muted\\\">\\n      <fa-icon [icon]=\\\"faTh\\\"></fa-icon>\\n      Dashboard\\n    </h4>\\n\\n    <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"onLogOut()\\\">\\n      <fa-icon [icon]=\\\"faPowerOff\\\"></fa-icon>\\n      Logout\\n    </button>\\n  </div>\\n  <hr class=\\\"socket\\\" />\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6 col-md-4 col-lg-3 mb-2 mx-auto\\\">\\n      <div class=\\\"card border-warning\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            <fa-icon [icon]=\\\"faCar\\\" class=\\\"fa-2x\\\"></fa-icon>\\n          </p>\\n          <span class=\\\"font-weight-bold\\\">\\n            Vehicles\\n          </span>\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            {{summary.totalVehicles}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-6 col-md-4 col-lg-3 mb-2 mx-auto\\\">\\n      <div class=\\\"card border-warning\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            <fa-icon [icon]=\\\"faUsers\\\" class=\\\"fa-2x\\\"></fa-icon>\\n          </p>\\n          <span class=\\\"font-weight-bold\\\">\\n            Drivers\\n          </span>\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            {{summary.totalDrivers}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 col-md-4 col-lg-3 mb-2 mx-auto\\\">\\n      <div class=\\\"card border-warning\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            <fa-icon [icon]=\\\"faRoute\\\" class=\\\"fa-2x\\\"></fa-icon>\\n          </p>\\n          <span class=\\\"font-weight-bold\\\">\\n            Routes\\n          </span>\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            {{summary.totalRoutes}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 col-md-4 col-lg-3 mb-2 mx-auto\\\">\\n      <div class=\\\"card border-warning\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            <fa-icon [icon]=\\\"faListAlt\\\" class=\\\"fa-2x\\\"></fa-icon>\\n          </p>\\n          <span class=\\\"font-weight-bold\\\">\\n            Tracker\\n          </span>\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            {{summary.totalTrackers}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-12 col-lg-8 mx-auto mt-5 p-0\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/profile\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faUser\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Profile</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/vehicletracker\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faListAlt\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Vehicle Tracker</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/vehicles/\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faCar\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Vehicles</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/drivers\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faUsers\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Drivers</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/routes\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faRoute\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Travel Routes</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/breakdownhistories\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faHistory\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Breakdown History</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 ml-auto\\\">\\n      <div>\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faUsers\\\"></fa-icon>\\n            Drivers\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            New Driver\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\"\\n                        placeholder=\\\"Search driver by last name, first name or email.\\\" [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-lg\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Last Name</th>\\n                      <th>First Name</th>\\n                      <th>Email</th>\\n                      <th>Marital Status</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let driver of drivers; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{driver.lastName}}</td>\\n                      <td>{{driver.firstName}}</td>\\n                      <td>{{driver.email}}</td>\\n                      <td>{{driver.maritalStatus}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onViewProfile(driver)\\\">\\n                              <fa-icon [icon]=\\\"faUser\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              View driver profile\\n                            </label>\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(driver)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit driver details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(driver)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete driver details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  Add New Driver\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Driver\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #driverForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"lastName\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Last Name\\\"\\n                      [(ngModel)]=\\\"newDriver.lastName\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"firstName\\\" class=\\\"form-control form-control-custom\\\"\\n                      placeholder=\\\"First Name\\\" [(ngModel)]=\\\"newDriver.firstName\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control form-control-custom\\\"\\n                      placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"newDriver.email\\\" required email />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"tel\\\" name=\\\"mobile\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Mobile No.\\\"\\n                      [(ngModel)]=\\\"newDriver.mobile\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select name=\\\"maritalStatus\\\" class=\\\"form-control form-control-custom\\\"\\n                      [(ngModel)]=\\\"newDriver.maritalStatus\\\" required>\\n                      <option [value]=\\\"null\\\">Marital Status</option>\\n                      <option value=\\\"single\\\">\\n                        Single\\n                      </option>\\n                      <option value=\\\"married\\\">\\n                        Married\\n                      </option>\\n                      <option value=\\\"divorced\\\">\\n                        Divorced\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!driverForm.form.valid\\\"\\n                      (click)=\\\"saveDriver()\\\" *ngIf=\\\"isNewItemMode\\\">\\n                      Save Driver\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!driverForm.form.valid\\\"\\n                      (click)=\\\"updateDriver()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Driver\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"col-12 col-sm-7 col-md-6 col-lg-5 col-xl-4 mx-auto my-5\\\">\\n  <a routerLink=\\\"/login\\\" class=\\\"btn btn-warning btn-sm mb-2 btn-rounded\\\">\\n    <fa-icon [icon]=\\\"faArrowCircleLeft\\\"></fa-icon>\\n    Login\\n  </a>\\n  <div class=\\\"card shadow\\\">\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"text-center\\\">\\n        <img src=\\\"/assets/logo.png\\\" alt=\\\"abc logo\\\" class=\\\"logo\\\">\\n\\n        <h5 class=\\\"mt-3 text-muted\\\">\\n          Reset Forgotten Password\\n        </h5>\\n      </div>\\n\\n\\n      <form #confirmEmailForm=\\\"ngForm\\\" *ngIf=\\\"!isValidEmail\\\">\\n        <div class=\\\"form-group mt-3\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <input type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" id=\\\"email\\\" autocomplete=\\\"off\\\" #email=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"confirmEmail.email\\\" email required />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-rounded btn-outline-success\\\" (click)=\\\"onConfirmEmail()\\\"\\n            [disabled]=\\\"!confirmEmailForm.form.valid\\\">\\n            Continue\\n            <fa-icon [icon]=\\\"faArrowCircleRight\\\"></fa-icon>\\n          </button>\\n        </div>\\n      </form>\\n\\n      <form #resetPasswordForm=\\\"ngForm\\\" *ngIf=\\\"isValidEmail\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" autocomplete=\\\"off\\\"\\n              [(ngModel)]=\\\"resetPassword.password\\\" required />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <input type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" name=\\\"confirmPassword\\\" #password=\\\"ngModel\\\"\\n              autocomplete=\\\"off\\\" [(ngModel)]=\\\"resetPassword.confirmPassword\\\" required />\\n          </div>\\n          <span class=\\\"text-danger mt-1\\\" *ngIf=\\\"resetPassword.confirmPassword !== resetPassword.password\\\">\\n            <small>Password does not match</small>\\n          </span>\\n        </div>\\n\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-rounded btn-outline-success\\\" (click)=\\\"onResetPassword()\\\"\\n            [disabled]=\\\"!resetPasswordForm.form.valid\\\">\\n            Reset Password\\n          </button>\\n        </div>\\n      </form>\\n\\n      <div *ngIf=\\\"isProcessing\\\" class=\\\"text-center\\\">\\n        <span>\\n          <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n          Processing request\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"col-12 col-sm-7 col-md-6 col-lg-5 col-xl-4 mx-auto my-5\\\">\\n  <form #loginForm=\\\"ngForm\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"text-center\\\">\\n          <img src=\\\"/assets/logo.png\\\" alt=\\\"abc logo\\\" class=\\\"logo\\\">\\n        </div>\\n\\n        <div class=\\\"my-2\\\" *ngIf=\\\"isProcessing\\\">\\n          <div class=\\\"progress\\\">\\n            <div class=\\\"progress-bar progress-bar-striped progress-bar-animated bg-success\\\" style=\\\"width:100%\\\">\\n              authenticating...\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group mt-3\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <span class=\\\"mr-2 text-muted\\\">\\n              <fa-icon [icon]=\\\"faEnvelope\\\"></fa-icon>\\n            </span>\\n            <input type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" id=\\\"email\\\" autocomplete=\\\"off\\\" #email=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"loginModel.email\\\" email required />\\n          </div>\\n\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <span class=\\\"mr-2 text-muted\\\">\\n              <fa-icon [icon]=\\\"faLock\\\"></fa-icon>\\n            </span>\\n            <input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" autocomplete=\\\"off\\\"\\n              [(ngModel)]=\\\"loginModel.password\\\" required />\\n          </div>\\n\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-rounded btn-outline-success\\\" (click)=\\\"onLogin()\\\" [disabled]=\\\"!loginForm.form.valid\\\">\\n            Login\\n            <fa-icon [icon]=\\\"faSignInAlt\\\"></fa-icon>\\n          </button>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <a routerLink=\\\"/forgot/password\\\">\\n            <small>\\n              Forgot your password?\\n            </small>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","export default \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">\\n    {{settings.title}}\\n  </h5>\\n</div>\\n<div class=\\\"modal-body text-center\\\">\\n  <p class=\\\"text-center\\\" *ngIf=\\\"settings.type == 0\\\">\\n    <fa-icon [icon]=\\\"faExclamationTriangle\\\" class=\\\"fa-2x text-warning\\\"></fa-icon>\\n  </p>\\n\\n  <p class=\\\"text-center\\\" *ngIf=\\\"settings.type == 1\\\">\\n    <fa-icon [icon]=\\\"faCheckCircle\\\" class=\\\"fa-2x text-success\\\"></fa-icon>\\n  </p>\\n\\n  <p class=\\\"text-center\\\" *ngIf=\\\"settings.type == 2\\\">\\n    <fa-icon [icon]=\\\"faInfoCircle\\\" class=\\\"fa-2x text-info\\\"></fa-icon>\\n  </p>\\n\\n  {{settings.message}}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <div *ngIf=\\\"settings.type == 0\\\">\\n    <button class=\\\"btn btn-sm btn-danger mr-2\\\" (click)=\\\"cancel()\\\">\\n      Cancel\\n    </button>\\n    <button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"ok()\\\">\\n      Continue\\n    </button>\\n  </div>\\n  <div *ngIf=\\\"settings.type == 1\\\">\\n    <button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"ok()\\\">\\n      Ok\\n    </button>\\n  </div>\\n  <div *ngIf=\\\"settings.type == 2\\\">\\n    <button class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"close()\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"modal-header border-0\\\">\\n  <h5 class=\\\"modal-title\\\">\\n    <fa-icon [icon]=\\\"faIdCard\\\" class=\\\"text-info\\\"></fa-icon>\\n    <span class=\\\"text-secondary\\\">\\n      Profile\\n    </span>\\n  </h5>\\n  <a href=\\\"javascript: void(0)\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n    <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n  </a>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"row align-items-center\\\">\\n    <div class=\\\"col-md-5 mb-2\\\">\\n      <div class=\\\"avatar mx-auto\\\">\\n        <img src=\\\"assets/avatar.png\\\" alt=\\\"user profile picture\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-7 mb-2\\\">\\n      <div class=\\\"card bg-light\\\">\\n        <div class=\\\"card-body\\\">\\n          <p class=\\\"mb-1\\\">\\n            <b>Name:</b>\\n            <span class=\\\"text-capitalize\\\">\\n              {{user.firstName}} {{user.lastName}}\\n            </span>\\n          </p>\\n          <hr class=\\\"socket mt-0\\\">\\n          <p class=\\\"mb-1\\\">\\n            <b>Email:</b>\\n            <span>\\n              {{user.email}}\\n            </span>\\n          </p>\\n          <hr class=\\\"socket mt-0\\\">\\n          <p class=\\\"mb-1\\\">\\n            <b>Mobile:</b>\\n            <span>\\n              {{user.mobile}}\\n            </span>\\n          </p>\\n          <hr class=\\\"socket mt-0\\\">\\n          <p class=\\\"mb-1\\\">\\n            <b>Marital Status:</b>\\n            <span class=\\\"text-capitalize\\\">\\n              {{user.maritalStatus}}\\n            </span>\\n          </p>\\n          <hr class=\\\"socket mt-0\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 ml-auto\\\">\\n      <div>\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faRoute\\\"></fa-icon>\\n            Travel Routes\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            New Route\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\" placeholder=\\\"Search route by departure or destination.\\\"\\n                        [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-md\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Departed From</th>\\n                      <th>Destination</th>\\n                      <th>Scheduled At</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let route of routes; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{route.departure}}</td>\\n                      <td>{{route.destination}}</td>\\n                      <td>{{route.scheduledAt}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(route)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit route details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(route)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete route details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <div *ngIf=\\\"isLoading\\\" class=\\\"text-center\\\">\\n                  <span>\\n                    <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                    Loading Routes\\n                  </span>\\n                </div>\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  Add New Route\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Route\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #routeForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"departure\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Departure\\\"\\n                      [(ngModel)]=\\\"newRoute.departure\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"destination\\\" class=\\\"form-control form-control-custom\\\"\\n                      placeholder=\\\"Destination\\\" [(ngModel)]=\\\"newRoute.destination\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group text-center\\\">\\n                    <label for=\\\"schedule\\\">\\n                      Travel Schedule\\n                    </label>\\n                    <input type=\\\"text\\\" id=\\\"schedule\\\" name=\\\"scheduledAt\\\" class=\\\"form-control form-control-custom\\\"\\n                      placeholder=\\\"Schedule\\\" [value]=\\\"time.hour + ':' + time.minute + ' ' + getMeridan()\\\" required\\n                      readonly aria-readonly />\\n                    <ngb-timepicker [(ngModel)]=\\\"time\\\" [meridian]=\\\"true\\\" name=\\\"time\\\"></ngb-timepicker>\\n                  </div>\\n\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!routeForm.form.valid\\\" (click)=\\\"saveRoute()\\\"\\n                      *ngIf=\\\"isNewItemMode\\\">\\n                      Save Route\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!routeForm.form.valid\\\"\\n                      (click)=\\\"updateRoute()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Route\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-md navbar-light\\\">\\n  <button class=\\\"navbar-toggler ml-auto\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#topMenu\\\">\\n    <span class=\\\"line-1\\\"></span>\\n    <span class=\\\"line-2\\\"></span>\\n    <span class=\\\"line-3\\\"></span>\\n  </button>\\n  <div class=\\\"navbar-collapse collapse\\\" id=\\\"topMenu\\\">\\n\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12 col-md-4 col-lg-3 col-xl-2 p-0 bg-dark fixed-top sidebar\\\">\\n          <div class=\\\"text-right\\\">\\n            <button class=\\\"navbar-toggler mt-1 mr-1 text-light\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#topMenu\\\">\\n              <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n            </button>\\n          </div>\\n          <div class=\\\"my-2 text-center\\\">\\n            <img src=\\\"/assets/logo.png\\\" alt=\\\"abc logo\\\" class=\\\"logo\\\">\\n            <p class=\\\"text-light mt-1\\\">Vehicle Logisitics</p>\\n          </div>\\n          <ul class=\\\"navbar-nav flex-column\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/dashboard\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faTh\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Dashboard\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/profile\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faUser\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Profile\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/vehicletracker\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faListAlt\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Tracker\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/breakdownhistories\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faHistory\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Breakdown History\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/vehicles/\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faCarAlt\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Vehicle\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/drivers\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faUsers\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Driver\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/routes\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faRoute\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Route\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a href=\\\"javascript: void(0)\\\" class=\\\"nav-link\\\" (click)=\\\"onLogOut()\\\">\\n                <fa-icon [icon]=\\\"faPowerOff\\\" class=\\\"text-danger mr-2\\\"></fa-icon>\\n                logout\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 ml-auto\\\">\\n      <div>\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faListAlt\\\"></fa-icon>\\n            Vehicle Tracker\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            Track Vehicle\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\" placeholder=\\\"Search by driver name\\\" [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-lg\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Driver Name</th>\\n                      <th>Vehicle Engine No.</th>\\n                      <th>Departs From</th>\\n                      <th>Destination</th>\\n                      <th>Scheduled At</th>\\n                      <th>Date</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let tracker of trackers; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{tracker.Driver.firstName}} {{tracker.Driver.lastName}}</td>\\n                      <td>{{tracker.Vehicle.engineNo}}</td>\\n                      <td>{{tracker.Route.departure}}</td>\\n                      <td>{{tracker.Route.destination}}</td>\\n                      <td>{{tracker.Route.scheduledAt}}</td>\\n                      <td>{{tracker.createdAt | date}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(tracker)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit tracker details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(tracker)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete tracker details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <div *ngIf=\\\"isLoading\\\" class=\\\"text-center\\\">\\n                  <span>\\n                    <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                    Loading Vehicle Tracker\\n                  </span>\\n                </div>\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  New Tracker Record\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Tracker Record\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #trackerForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"driverId\\\" [(ngModel)]=\\\"newTracker.driverId\\\"\\n                      required>\\n                      <option [value]=\\\"null\\\">Select Driver</option>\\n                      <option [value]=\\\"driver.id\\\" *ngFor=\\\"let driver of drivers\\\">\\n                        {{driver.firstName}} {{driver.lastName}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"newTracker.vehicleId\\\"\\n                      required>\\n                      <option [value]=\\\"null\\\">Select Vehicle</option>\\n                      <option [value]=\\\"vehicle.id\\\" *ngFor=\\\"let vehicle of vehicles\\\">\\n                        {{vehicle.engineNo}}\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"routeId\\\" [(ngModel)]=\\\"newTracker.routeId\\\"\\n                      required>\\n                      <option [value]=\\\"null\\\">Select Travel Route</option>\\n                      <option [value]=\\\"route.id\\\" *ngFor=\\\"let route of routes\\\">\\n                        {{route.departure}} -> {{route.destination}} ({{route.scheduledAt}})\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!trackerForm.form.valid\\\"\\n                      (click)=\\\"saveTracker()\\\" *ngIf=\\\"isNewItemMode\\\">\\n                      Save Tracker\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!trackerForm.form.valid\\\"\\n                      (click)=\\\"updateTracker()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Tracker\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 p-0 ml-auto\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faUser\\\"></fa-icon>\\n            Profile\\n          </h5>\\n        </div>\\n        <hr class=\\\"socket\\\" />\\n\\n        <div class=\\\"card rounded mt-1 mt-sm-5\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row align-items-center\\\">\\n              <div class=\\\"col-12 col-md-5 col-lg-4 mx-auto text-center mb-2\\\">\\n                <img src=\\\"/assets/avatar.png\\\" alt=\\\"profile pics\\\" class=\\\"avatar\\\" />\\n              </div>\\n              <div class=\\\"col-12 col-md-7 col-lg-8 mx-auto mb-2\\\">\\n                <div class=\\\"card rounded bg-light\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <form #userForm=\\\"ngForm\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-custom\\\" name=\\\"lastName\\\"\\n                          placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"userProfile.lastName\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-custom\\\" name=\\\"firstName\\\"\\n                          placeholder=\\\"First Name\\\" [(ngModel)]=\\\"userProfile.firstName\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"email\\\" class=\\\"form-control form-control-custom\\\" name=\\\"email\\\"\\n                          placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"userProfile.email\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"tel\\\" class=\\\"form-control form-control-custom\\\" name=\\\"mobile\\\"\\n                          placeholder=\\\"Mobile No.\\\" [(ngModel)]=\\\"userProfile.mobile\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control form-control-custom\\\" name=\\\"password\\\"\\n                          [(ngModel)]=\\\"userProfile.password\\\" placeholder=\\\"Reset Password\\\">\\n                      </div>\\n                      <div class=\\\"form-group text-center\\\">\\n                        <button class=\\\"btn btn-success btn-rounded\\\" (click)=\\\"onUpdate()\\\">\\n                          Update profile\\n                        </button>\\n                      </div>\\n                    </form>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 p-0 ml-auto\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faCar\\\"></fa-icon>\\n            Vehicles\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            New Vehicle\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\" placeholder=\\\"Search vehicle by engine no.\\\"\\n                        [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-md\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Engine No</th>\\n                      <th>Capacity</th>\\n                      <th>Fuel Type</th>\\n                      <th>Status</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let vehicle of vehicles; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{vehicle.engineNo}}</td>\\n                      <td>{{vehicle.capacity}}</td>\\n                      <td>{{vehicle.Fuel.type}}</td>\\n                      <td>{{vehicle.isFunctional ? \\\"active\\\" : \\\"faulty\\\"}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <a [routerLink]=\\\"'/breakdownhistories/' + vehicle.engineNo\\\" class=\\\"dropdown-item\\\">\\n                              <fa-icon [icon]=\\\"faHistory\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Breakdown History\\n                            </a>\\n                            <a [routerLink]=\\\"'/vehicletracker/' + vehicle.engineNo\\\" class=\\\"dropdown-item\\\">\\n                              <fa-icon [icon]=\\\"faListAlt\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Tracker Record\\n                            </a>\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(vehicle)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit vehicle details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(vehicle)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete vehicle details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  Add New Vehicle\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Vehicle\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #newVehicleForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"engineNo\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Engine No.\\\"\\n                      [(ngModel)]=\\\"newVehicle.engineNo\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"number\\\" name=\\\"capacity\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Capacity\\\"\\n                      [(ngModel)]=\\\"newVehicle.capacity\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select name=\\\"fuelId\\\" class=\\\"form-control form-control-custom\\\" [(ngModel)]=\\\"newVehicle.fuelId\\\"\\n                      required>\\n                      <option [value]=\\\"null\\\">Fuel Type</option>\\n                      <option *ngFor=\\\"let fuel of fuelTypes\\\" [value]=\\\"fuel.id\\\">\\n                        {{fuel.type}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!newVehicleForm.form.valid\\\"\\n                      (click)=\\\"saveVehicle()\\\" *ngIf=\\\"isNewItemMode\\\">\\n                      Save Vehicle\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!newVehicleForm.form.valid\\\"\\n                      (click)=\\\"updateVehicle()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Vehicle\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { VehicleComponent } from \"./vehicle/vehicle.component\";\nimport { DriverComponent } from \"./driver/driver.component\";\nimport { RouteComponent } from \"./route/route.component\";\nimport { BreakdownhistoryComponent } from \"./breakdownhistory/breakdownhistory.component\";\nimport { TrackerComponent } from \"./tracker/tracker.component\";\nimport { UserProfileComponent } from \"./user-profile/user-profile.component\";\nimport { AuthGuard } from \"./auth.guard\";\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\n\nconst routes: Routes = [\n  { path: \"\", canActivate: [AuthGuard], component: DashboardComponent },\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"dashboard\",\n    canActivate: [AuthGuard],\n    component: DashboardComponent,\n  },\n  {\n    path: \"vehicles\",\n    canActivate: [AuthGuard],\n    component: VehicleComponent,\n  },\n  {\n    path: \"drivers\",\n    canActivate: [AuthGuard],\n    component: DriverComponent,\n  },\n  {\n    path: \"routes\",\n    canActivate: [AuthGuard],\n    component: RouteComponent,\n  },\n  {\n    path: \"breakdownhistories\",\n    canActivate: [AuthGuard],\n    component: BreakdownhistoryComponent,\n  },\n  {\n    path: \"breakdownhistories/:engineNo\",\n    canActivate: [AuthGuard],\n    component: BreakdownhistoryComponent,\n  },\n  {\n    path: \"vehicletracker\",\n    canActivate: [AuthGuard],\n    component: TrackerComponent,\n  },\n  {\n    path: \"vehicletracker/:engineNo\",\n    canActivate: [AuthGuard],\n    component: TrackerComponent,\n  },\n  {\n    path: \"profile\",\n    canActivate: [AuthGuard],\n    component: UserProfileComponent,\n  },\n  {\n    path: \"forgot/password\",\n    component: ForgotPasswordComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"Vehicle Logistics\";\n  appYear = new Date().getFullYear();\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ToastrModule } from \"ngx-toastr\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { DriverComponent } from \"./driver/driver.component\";\nimport { VehicleComponent } from \"./vehicle/vehicle.component\";\nimport { SidebarComponent } from \"./sidebar/sidebar.component\";\nimport { MessageboxComponent } from \"./messagebox/messagebox.component\";\nimport { ProfilePopupComponent } from \"./profile-popup/profile-popup.component\";\nimport { RouteComponent } from \"./route/route.component\";\nimport { BreakdownhistoryComponent } from \"./breakdownhistory/breakdownhistory.component\";\nimport { TrackerComponent } from \"./tracker/tracker.component\";\nimport { UserProfileComponent } from \"./user-profile/user-profile.component\";\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n// this function retrieves the token\nexport function tokenGetter() {\n  return localStorage.getItem(\"access_token\");\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    DriverComponent,\n    VehicleComponent,\n    SidebarComponent,\n    MessageboxComponent,\n    ProfilePopupComponent,\n    RouteComponent,\n    BreakdownhistoryComponent,\n    TrackerComponent,\n    UserProfileComponent,\n    ForgotPasswordComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      progressBar: true,\n      timeOut: 5000,\n      maxOpened: 1,\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:4100\"],\n        disallowedRoutes: [\"localhost:4100/api/auth/\"],\n      },\n    }),\n    NgbModule,\n  ],\n  entryComponents: [MessageboxComponent, ProfilePopupComponent],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { NotificationService } from \"./services/notification.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private notify: NotificationService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (localStorage) {\n      if (localStorage.getItem(\"access_token\")) {\n        return true;\n      } else {\n        this.notify.showWarning(\n          \"You must login before you can view this page\",\n          \"Warning\"\n        );\n        this.router.navigate([\"/login\"]);\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyZWFrZG93bmhpc3RvcnkvYnJlYWtkb3duaGlzdG9yeS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  faCalendar,\n  faCalendarAlt,\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faHistory,\n  faRoute,\n  faSearch,\n  faSpinner,\n  faTimes,\n  faTrash,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { BreakdownHistory } from \"../models/breakdown-history\";\nimport { Driver } from \"../models/driver\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { BreakdownHistoryService } from \"../services/breakdown-history.service\";\nimport { DriverService } from \"../services/driver.service\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { VehicleService } from \"../services/vehicle.service\";\n\n@Component({\n  selector: \"app-breakdownhistory\",\n  templateUrl: \"./breakdownhistory.component.html\",\n  styleUrls: [\"./breakdownhistory.component.css\"],\n})\nexport class BreakdownhistoryComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faHistory = faHistory;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faUser = faUser;\n  faCalendar = faCalendarAlt;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  breakdownHistories: BreakdownHistory[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  newBreakdownHistory: BreakdownHistory = new BreakdownHistory(\n    null,\n    null,\n    null,\n    null\n  );\n  isLoading: boolean;\n  isProcessing: boolean;\n  drivers: Driver[] = [];\n  vehicles: Vehicle[] = [];\n  breakdownDate: { year: number; month: number; day: number };\n  repairDate: { year: number; month: number; day: number };\n  engineNo: string;\n\n  constructor(\n    public breakdownHistoryService: BreakdownHistoryService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService,\n    public driverService: DriverService,\n    public vehicleService: VehicleService,\n    public route: ActivatedRoute\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n\n    if (mode === ViewModes.NewItemView) {\n      this.newBreakdownHistory = new BreakdownHistory(null, null, null, null);\n      this.breakdownDate = null;\n      this.repairDate = null;\n    }\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n    this.breakdownHistoryService\n      .getHistories(page, this.searchquery, this.engineNo)\n      .subscribe(\n        (response) => {\n          if (response.result) {\n            this.breakdownHistories = this.breakdownHistories.concat(\n              response.result\n            );\n            this.hasMoreData = response.totalPages > response.currentPage;\n            this.currentPage = Number(response.currentPage);\n          } else {\n            // notify\n            this.notify.showWarning(response.message, \"Loading Failed\");\n          }\n        },\n        (reason) => {\n          this.notify.showError(\n            \"we were unable to contact server\",\n            \"Operation failed\"\n          );\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  saveBreakdown() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.setDates();\n\n    this.breakdownHistoryService\n      .saveHistory(this.newBreakdownHistory)\n      .subscribe((response) => {\n        this.isProcessing = false;\n        if (response.success) {\n          this.notify.showSuccess(\"Saved successfully\", \"success\");\n          this.breakdownHistories.push(response.result);\n          this.newBreakdownHistory = new BreakdownHistory(\n            null,\n            null,\n            null,\n            null\n          );\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      });\n  }\n\n  updateBreakdown() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.setDates();\n\n    this.breakdownHistoryService\n      .updateHistory(this.newBreakdownHistory)\n      .subscribe(\n        (response) => {\n          if (response.success) {\n            this.notify.showSuccess(\n              \"breakdown history updated successfully\",\n              \"success\"\n            );\n          } else {\n            this.notify.showError(response.message, \"Operation failed\");\n          }\n        },\n        (reason) => {\n          this.notify.showError(\n            \"Unable to contact server.\",\n            \"Operation failed\"\n          );\n        },\n        () => {\n          this.isProcessing = false;\n        }\n      );\n  }\n\n  onSearch() {\n    this.breakdownHistories = [];\n    this.loadData();\n  }\n\n  onEdit(breakdownHistory: BreakdownHistory) {\n    this.setViewMode(ViewModes.EditView);\n    this.newBreakdownHistory = breakdownHistory;\n    this.newBreakdownHistory.vehicleId = Number(breakdownHistory.vehicleId);\n    let d = new Date(breakdownHistory.breakdownDate);\n    this.breakdownDate = {\n      year: d.getFullYear(),\n      month: d.getMonth() + 1,\n      day: d.getDate(),\n    };\n\n    if (breakdownHistory.repairDate) {\n      d = new Date(breakdownHistory.repairDate);\n      this.repairDate = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate(),\n      };\n    } else {\n      this.repairDate = null;\n    }\n  }\n\n  onDelete(breakdownHistory: BreakdownHistory) {\n    let modalInstance = this.messageBox.showWarning(\n      `Are you sure you want to delete this breakdown history?`,\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting history\");\n          this.breakdownHistoryService\n            .deleteHistory(breakdownHistory)\n            .subscribe(\n              (response) => {\n                if (response.success) {\n                  let index = this.breakdownHistories.findIndex(\n                    (r) => r.id === breakdownHistory.id\n                  );\n                  this.breakdownHistories.splice(index, 1);\n                  this.notify.showSuccess(\n                    \"breakdown history deleted successfully.\",\n                    \"Success\"\n                  );\n                } else {\n                  this.notify.showWarning(response.message, \"Operation failed\");\n                }\n              },\n              (reason) => {\n                this.notify.showError(\n                  \"we were unable to contact server.\",\n                  \"Operation failed\"\n                );\n              },\n              () => {\n                this.notify.hideProcessing(tid);\n              }\n            );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  ngOnInit() {\n    this.engineNo = this.route.snapshot.params[\"engineNo\"];\n    this.loadData();\n    this.driverService.getDrivers(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.drivers = response.result;\n        console.log(response);\n      }\n    });\n    this.vehicleService.getVehicles(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.vehicles = response.result;\n      }\n    });\n  }\n\n  setDates() {\n    if (this.breakdownDate) {\n      this.newBreakdownHistory.breakdownDate = `${this.breakdownDate.year}-${this.breakdownDate.month}-${this.breakdownDate.day}`;\n    }\n    if (this.repairDate) {\n      this.newBreakdownHistory.repairDate = `${this.repairDate.year}-${this.repairDate.month}-${this.repairDate.day}`;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faCar,\n  faHistory,\n  faListAlt,\n  faPowerOff,\n  faRoute,\n  faTh,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Summary } from \"../models/summary\";\nimport { AuthService } from \"../services/auth.service\";\nimport { DashboardService } from \"../services/dashboard.service\";\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  faUser = faUser;\n  faUsers = faUsers;\n  faCar = faCar;\n  faListAlt = faListAlt;\n  faRoute = faRoute;\n  faHistory = faHistory;\n  faTh = faTh;\n  faPowerOff = faPowerOff;\n\n  summary: Summary = {\n    totalDrivers: 0,\n    totalRoutes: 0,\n    totalTrackers: 0,\n    totalVehicles: 0,\n  };\n  constructor(\n    public dashboard: DashboardService,\n    public authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.dashboard.getSummary().subscribe((response) => {\n      if (response.success) {\n        this.summary = response.result;\n        console.log(response);\n      }\n    });\n  }\n\n  onLogOut() {\n    this.authService.logout();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaXZlci9kcml2ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faUsers,\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faSearch,\n  faSpinner,\n  faTimes,\n  faTrash,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { Driver } from \"../models/driver\";\nimport { Fuel } from \"../models/fuel\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { DriverService } from \"../services/driver.service\";\nimport { FuelTypeService } from \"../services/fuel-type.service\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { ProfilePopupService } from \"../services/profile-popup.service\";\nimport { VehicleService } from \"../services/vehicle.service\";\n\n@Component({\n  selector: \"app-driver\",\n  templateUrl: \"./driver.component.html\",\n  styleUrls: [\"./driver.component.css\"],\n})\nexport class DriverComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faUsers = faUsers;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faUser = faUser;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  drivers: Driver[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  newDriver: Driver = new Driver(null, null, null, null, null, null);\n\n  isLoading: boolean;\n  isProcessing: boolean;\n\n  constructor(\n    public driverService: DriverService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService,\n    public profilePopup: ProfilePopupService\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n\n    this.driverService.getDrivers(page, this.searchquery).subscribe(\n      (response) => {\n        if (response.result) {\n          this.drivers = this.drivers.concat(response.result);\n          this.hasMoreData = response.totalPages > response.currentPage;\n          this.currentPage = Number(response.currentPage);\n        } else {\n          // notify\n          this.notify.showWarning(response.message, \"Loading Failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\n          \"we were unable to contact server\",\n          \"Operation failed\"\n        );\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  saveDriver() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.driverService.saveDriver(this.newDriver).subscribe((response) => {\n      this.isProcessing = false;\n      if (response.success) {\n        this.drivers.push(response.result);\n        this.newDriver = new Driver(null, null, null, null, null, null);\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n\n  updateDriver() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.driverService.updateDriver(this.newDriver).subscribe(\n      (response) => {\n        if (response.success) {\n          this.notify.showSuccess(\"driver updated successfully\", \"success\");\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\"Unable to contact server.\", \"Operation failed\");\n      },\n      () => {\n        this.isProcessing = false;\n      }\n    );\n  }\n\n  onSearch() {\n    this.drivers = [];\n    this.loadData();\n  }\n\n  onEdit(driver: Driver) {\n    this.setViewMode(ViewModes.EditView);\n    this.newDriver = driver;\n  }\n\n  onDelete(driver: Driver) {\n    let modalInstance = this.messageBox.showWarning(\n      `Are you sure you want to delete ${driver.firstName} ${driver.lastName}?`,\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting vehicle\");\n          this.driverService.deleteDriver(driver).subscribe(\n            (response) => {\n              if (response.success) {\n                let index = this.drivers.findIndex((d) => d.id === driver.id);\n                this.drivers.splice(index, 1);\n                this.notify.showSuccess(\n                  \"driver deleted successfully.\",\n                  \"Success\"\n                );\n              } else {\n                this.notify.showWarning(response.message, \"Operation failed\");\n              }\n            },\n            (reason) => {\n              this.notify.showError(\n                \"we were unable to contact server.\",\n                \"Operation failed\"\n              );\n            },\n            () => {\n              this.notify.hideProcessing(tid);\n            }\n          );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  onViewProfile(driver: Driver) {\n    let modalInstance = this.profilePopup.show(driver);\n    modalInstance.result.then(() => {}).catch(() => {});\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  faArrowCircleLeft,\n  faArrowCircleRight,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { User } from \"../models/user\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { UserService } from \"../services/user.service\";\n\n@Component({\n  selector: \"app-forgot-password\",\n  templateUrl: \"./forgot-password.component.html\",\n  styleUrls: [\"./forgot-password.component.css\"],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  faArrowCircleRight = faArrowCircleRight;\n  faSpinner = faSpinner;\n  faArrowCircleLeft = faArrowCircleLeft;\n\n  resetPassword = {\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  confirmEmail = { email: \"\" };\n  isValidEmail = false;\n  isProcessing = false;\n  user: User;\n\n  constructor(\n    public userService: UserService,\n    public notify: NotificationService,\n    public router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  onConfirmEmail() {\n    if (this.isProcessing) return;\n\n    this.isProcessing = true;\n    this.userService.getUser(this.confirmEmail.email).subscribe(\n      (response) => {\n        this.isProcessing = false;\n        if (response.success) {\n          this.isValidEmail = true;\n          this.user = response.result;\n        } else {\n          this.notify.showError(response.message, \"Not Found\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\n          \"We encountered a problem while contacting server\",\n          \"Operation failed\"\n        );\n      }\n    );\n  }\n\n  onResetPassword() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.user.password = this.resetPassword.password;\n\n    this.userService.updateUser(this.user).subscribe(\n      (response) => {\n        if (response.success) {\n          this.router.navigate([\"/login\"]);\n        } else {\n          this.notify.showWarning(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        console.log(reason);\n        this.notify.showError(\n          \"We encountered a problem while contacting server\",\n          \"Operation failed\"\n        );\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faCheck,\n  faEnvelope,\n  faLock,\n  faSignInAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  loginModel = { email: \"\", password: \"\", model: \"User\" };\n  faCheck = faCheck;\n  faEnvelope = faEnvelope;\n  faLock = faLock;\n  faSignInAlt = faSignInAlt;\n  isProcessing = false;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {}\n\n  onLogin() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.authService.login(\"/\", this.loginModel, () => {\n      this.isProcessing = false;\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2Vib3gvbWVzc2FnZWJveC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faCheckCircle,\n  faExclamation,\n  faExclamationTriangle,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { MessageboxResponse } from \"../models/app-enums\";\n\n@Component({\n  selector: \"app-messagebox\",\n  templateUrl: \"./messagebox.component.html\",\n  styleUrls: [\"./messagebox.component.css\"],\n})\nexport class MessageboxComponent implements OnInit {\n  constructor(private modalInstance: NgbActiveModal) {}\n  faExclamationTriangle = faExclamationTriangle;\n  faCheckCircle = faCheckCircle;\n  faInfoCircle = faInfoCircle;\n\n  ngOnInit() {}\n\n  ok() {\n    this.modalInstance.close(MessageboxResponse.OK);\n  }\n\n  cancel() {\n    this.modalInstance.close(MessageboxResponse.CANCEL);\n  }\n\n  close() {\n    this.modalInstance.close(MessageboxResponse.CLOSE);\n  }\n}\n","export enum ViewModes {\r\n  MainView,\r\n  EditView,\r\n  NewItemView,\r\n}\r\n\r\nexport enum MessageboxResponse {\r\n  CANCEL,\r\n  OK,\r\n  CLOSE,\r\n}\r\n\r\nexport enum MessageboxType {\r\n  WARNING,\r\n  INFO,\r\n  SUCCESS,\r\n}\r\n","export class BreakdownHistory {\r\n  constructor(\r\n    public vehicleId: number,\r\n    public driverId: number,\r\n    public description: string,\r\n    public breakdownDate: string,\r\n    public repairDate?: string,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport class Driver {\r\n  constructor(\r\n    public lastName: string,\r\n    public firstName: string,\r\n    public email: string,\r\n    public maritalStatus: string,\r\n    public mobile: string,\r\n    public imageUrl: string,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","export class Route {\r\n  constructor(\r\n    public departure: string,\r\n    public destination: string,\r\n    public scheduledAt: string,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","import { Driver } from \"./driver\";\r\nimport { Route } from \"./route\";\r\nimport { Vehicle } from \"./vehicle\";\r\n\r\nexport class Tracker {\r\n  constructor(\r\n    public routeId: number,\r\n    public vehicleId: number,\r\n    public driverId: number,\r\n    public Route?: Route,\r\n    public Vehicle?: Vehicle,\r\n    public Driver?: Driver,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","export class User {\r\n  constructor(\r\n    public lastName: string,\r\n    public firstName: string,\r\n    public email: string,\r\n    public maritalStatus: string,\r\n    public mobile: string,\r\n    public imageUrl: string,\r\n    public password?: string,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","export class Vehicle {\r\n  constructor(\r\n    public engineNo: string,\r\n    public capacity: number,\r\n    public fuelId: number,\r\n    public isFunctional?: boolean,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtcG9wdXAvcHJvZmlsZS1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { faIdCard, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-profile-popup\",\n  templateUrl: \"./profile-popup.component.html\",\n  styleUrls: [\"./profile-popup.component.css\"],\n})\nexport class ProfilePopupComponent implements OnInit {\n  faTimes = faTimes;\n  faIdCard = faIdCard;\n\n  constructor(private modalInstance: NgbActiveModal) {}\n\n  ngOnInit() {}\n\n  close() {\n    this.modalInstance.close(0);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlL3JvdXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faSearch,\n  faSpinner,\n  faTimes,\n  faTrash,\n  faUser,\n  faRoute,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { Route } from \"../models/route\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { RouteService } from \"../services/route.service\";\n\n@Component({\n  selector: \"app-route\",\n  templateUrl: \"./route.component.html\",\n  styleUrls: [\"./route.component.css\"],\n})\nexport class RouteComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faRoute = faRoute;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faUser = faUser;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  routes: Route[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  newRoute: Route = new Route(null, null, null);\n  isLoading: boolean;\n  isProcessing: boolean;\n  time = {\n    hour: 10,\n    minute: 0,\n  };\n  scheduleChange = new BehaviorSubject<{ hour: number; minute: number }>(\n    this.time\n  );\n\n  constructor(\n    public routeService: RouteService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n\n    if (mode === ViewModes.NewItemView) {\n      this.newRoute = new Route(null, null, null);\n      this.setTime();\n    }\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n    this.routeService.getRoutes(page, this.searchquery).subscribe(\n      (response) => {\n        if (response.result) {\n          this.routes = this.routes.concat(response.result);\n          this.hasMoreData = response.totalPages > response.currentPage;\n          this.currentPage = Number(response.currentPage);\n        } else {\n          // notify\n          this.notify.showWarning(response.message, \"Loading Failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\n          \"we were unable to contact server\",\n          \"Operation failed\"\n        );\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  saveRoute() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.setSchedule();\n    this.routeService.saveRoute(this.newRoute).subscribe((response) => {\n      this.isProcessing = false;\n      if (response.success) {\n        this.routes.push(response.result);\n        this.newRoute = new Route(null, null, null);\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n\n  updateRoute() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.setSchedule();\n\n    this.routeService.updateRoute(this.newRoute).subscribe(\n      (response) => {\n        if (response.success) {\n          this.notify.showSuccess(\"route updated successfully\", \"success\");\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\"Unable to contact server.\", \"Operation failed\");\n      },\n      () => {\n        this.isProcessing = false;\n      }\n    );\n  }\n\n  onSearch() {\n    this.routes = [];\n    this.loadData();\n  }\n\n  onEdit(route: Route) {\n    this.setViewMode(ViewModes.EditView);\n    this.newRoute = route;\n    this.setTime(route.scheduledAt);\n  }\n\n  onDelete(route: Route) {\n    let modalInstance = this.messageBox.showWarning(\n      `Are you sure you want to delete this route?`,\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting route\");\n          this.routeService.deleteRoute(route).subscribe(\n            (response) => {\n              if (response.success) {\n                let index = this.routes.findIndex((r) => r.id === route.id);\n                this.routes.splice(index, 1);\n                this.notify.showSuccess(\n                  \"route deleted successfully.\",\n                  \"Success\"\n                );\n              } else {\n                this.notify.showWarning(response.message, \"Operation failed\");\n              }\n            },\n            (reason) => {\n              this.notify.showError(\n                \"we were unable to contact server.\",\n                \"Operation failed\"\n              );\n            },\n            () => {\n              this.notify.hideProcessing(tid);\n            }\n          );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  setTime(time = \"\") {\n    if (time) {\n      let fullTime = time.split(\" \");\n      let hour = Number(fullTime[0].split(\":\")[0]);\n      let minute = Number(fullTime[0].split(\":\")[1]);\n      let meridan = fullTime[1].toUpperCase();\n      if (meridan === \"PM\" && hour > 12) {\n        hour = Number(hour) - 12;\n      }\n      this.time = {\n        hour,\n        minute,\n      };\n    } else {\n      this.time = {\n        hour: 10,\n        minute: 0,\n      };\n    }\n  }\n\n  getMeridan() {\n    if (this.time.hour >= 12) return \"PM\";\n    else return \"AM\";\n  }\n\n  setSchedule() {\n    this.newRoute.scheduledAt = `${this.time.hour}:${this.time.minute}${\n      this.time.minute < 10 ? 0 : \"\"\n    } ${this.getMeridan()}`;\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.setTime();\n  }\n}\n","import { HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Feedback } from \"../models/feedback\";\nimport { CoreService } from \"./core.service\";\nimport { NotificationService } from \"./notification.service\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { User } from \"../models/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  public userStatus: string;\n  public userStatusChanges: BehaviorSubject<string> = new BehaviorSubject<string>(\n    \"\"\n  );\n  private authApiUrl = \"api/auth/login/\";\n\n  constructor(\n    private coreService: CoreService,\n    private router: Router,\n    private notify: NotificationService,\n    private jwtService: JwtHelperService\n  ) {}\n\n  setUserStatus(userStatus: any): void {\n    this.userStatus = userStatus;\n    this.userStatusChanges.next(userStatus);\n  }\n\n  login(\n    redirectUrl: string,\n    formData: { email: string; password: string; model: string },\n    onComplete: () => void\n  ) {\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n    // send a post request\n    this.coreService\n      .postData<Feedback<string>>(formData, this.authApiUrl, headers)\n      .subscribe(\n        (response) => {\n          if (response.success) {\n            localStorage.setItem(\"access_token\", response.result);\n            this.setUserStatus(response.result);\n            this.router.navigate([redirectUrl]);\n          } else {\n            this.notify.showWarning(response.message, \"Operation failed\");\n          }\n        },\n        (reason) => {\n          this.notify.showError(\n            \"Wrong email and password combination\",\n            \"Operation failed\"\n          );\n          onComplete();\n        },\n        () => {\n          onComplete();\n        }\n      );\n  }\n\n  logout() {\n    // just remove the access token and redirect\n    localStorage.removeItem(\"access_token\");\n    this.setUserStatus(null);\n    this.router.navigate([\"/login\"]);\n  }\n\n  public getUserType(): string {\n    let decoded = this.jwtService.decodeToken(this.userStatus);\n    if (decoded) {\n      return decoded[\"model\"];\n    }\n    return null;\n  }\n\n  public getStatusOnRefresh() {\n    if (localStorage.getItem(\"access_token\")) {\n      let token = localStorage.getItem(\"access_token\");\n      let decoded = this.jwtService.decodeToken(token);\n      if (Math.floor(Date.now() / 1000) > decoded[\"exp\"]) {\n        this.logout();\n      }\n      this.setUserStatus(localStorage.getItem(\"access_token\"));\n    }\n  }\n\n  public getCurrentUser() {\n    return this.coreService.getData<Feedback<User>>(\n      `api/auth/user?authorization=Bearer ${localStorage.getItem(\"access_token\")}`\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { BreakdownHistory } from \"../models/breakdown-history\";\nimport { Feedback } from \"../models/feedback\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BreakdownHistoryService {\n  private apiUrl = \"api/breakdownhistory/\";\n  constructor(private coreService: CoreService) {}\n\n  getHistories(\n    page = 1,\n    searchquery = \"\",\n    engineNo = \"\"\n  ): Observable<Feedback<BreakdownHistory[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&engineno=${engineNo}`\n    );\n  }\n\n  saveHistory(\n    breakdownHistory: BreakdownHistory\n  ): Observable<Feedback<BreakdownHistory>> {\n    return this.coreService.postData(breakdownHistory, this.apiUrl);\n  }\n\n  updateHistory(\n    breakdownHistory: BreakdownHistory\n  ): Observable<Feedback<BreakdownHistory>> {\n    return this.coreService.putData(breakdownHistory, this.apiUrl);\n  }\n\n  deleteHistory(\n    breakdownHistory: BreakdownHistory\n  ): Observable<Feedback<BreakdownHistory>> {\n    return this.coreService.deleteData(breakdownHistory.id, this.apiUrl);\n  }\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CoreService {\n  private host: string = \"\";\n  constructor(private http: HttpClient) {}\n\n  getData<T>(apiURL: string, headers?: HttpHeaders): Observable<T> {\n    return this.http.get<T>(`${this.host}${apiURL}`, { headers });\n  }\n\n  postData<T>(data: any, apiURL: string, headers?: HttpHeaders): Observable<T> {\n    return this.http.post<T>(`${this.host}${apiURL}`, data, { headers });\n  }\n\n  putData<T>(data, apiURL: string): Observable<T> {\n    return this.http.put<T>(`${this.host}${apiURL}`, data);\n  }\n\n  deleteData<T>(id: number, apiURL: string): Observable<T> {\n    const httpOptions = {\n      headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n      body: { id },\n    };\n    return this.http.delete<T>(`${this.host}${apiURL}`, httpOptions);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Summary } from \"../models/summary\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DashboardService {\n  private apiUrl = \"api/users/dashboard\";\n  constructor(private coreService: CoreService) {}\n\n  getSummary(): Observable<Feedback<Summary>> {\n    return this.coreService.getData(`${this.apiUrl}`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Driver } from \"../models/driver\";\nimport { Feedback } from \"../models/feedback\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DriverService {\n  private apiUrl = \"api/drivers/\";\n  constructor(private coreService: CoreService) {}\n\n  getDrivers(\n    page = 1,\n    searchquery = \"\",\n    paginate = true\n  ): Observable<Feedback<Driver[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&paginate=${paginate}`\n    );\n  }\n\n  saveDriver(driver: Driver): Observable<Feedback<Driver>> {\n    return this.coreService.postData(driver, this.apiUrl);\n  }\n\n  updateDriver(driver: Driver): Observable<Feedback<Driver>> {\n    return this.coreService.putData(driver, this.apiUrl);\n  }\n\n  deleteDriver(driver: Driver): Observable<Feedback<Driver>> {\n    return this.coreService.deleteData(driver.id, this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Fuel } from \"../models/fuel\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FuelTypeService {\n  private apiUrl = \"api/fuel/\";\n  constructor(private coreService: CoreService) {}\n\n  getFuelTypes(): Observable<Feedback<Fuel[]>> {\n    return this.coreService.getData<Feedback<Fuel[]>>(this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  NgbActiveModal,\n  NgbModal,\n  NgbModalRef,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { MessageboxComponent } from \"../messagebox/messagebox.component\";\nimport { MessageboxType } from \"../models/app-enums\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MessageboxService {\n  constructor(private modal: NgbModal) {}\n\n  createModal(\n    message: string,\n    title: string,\n    type: MessageboxType\n  ): NgbModalRef {\n    let modalInstance = this.modal.open(MessageboxComponent, { size: \"md\" });\n    modalInstance.componentInstance.settings = {\n      message,\n      title,\n      type: MessageboxType.WARNING,\n    };\n\n    return modalInstance;\n  }\n\n  showWarning(message: string, title = \"Warning\"): NgbModalRef {\n    return this.createModal(message, title, MessageboxType.WARNING);\n  }\n\n  showSuccess(message: string, title = \"Success\"): NgbModalRef {\n    return this.createModal(message, title, MessageboxType.SUCCESS);\n  }\n\n  showInfo(message: string, title = \"Information\"): NgbModalRef {\n    return this.createModal(message, title, MessageboxType.INFO);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { NgbToast } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationService {\n  constructor(private toastr: ToastrService) {}\n\n  activeProcess = [];\n\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title);\n  }\n  showError(message: string, title: string) {\n    this.toastr.error(message, title);\n  }\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title);\n  }\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title);\n  }\n\n  showProcessing(message: string) {\n    let active = this.toastr.info(message + \"...\", \"\", {\n      timeOut: 0,\n      progressAnimation: \"increasing\",\n    });\n    return active.toastId;\n  }\n\n  hideProcessing(id: number) {\n    this.toastr.remove(id);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { NgbModal, NgbModalRef } from \"@ng-bootstrap/ng-bootstrap\";\nimport { User } from \"../models/user\";\nimport { ProfilePopupComponent } from \"../profile-popup/profile-popup.component\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProfilePopupService {\n  constructor(private modal: NgbModal) {}\n\n  show(user: User): NgbModalRef {\n    let modalRef = this.modal.open(ProfilePopupComponent, { size: \"md\" });\n    modalRef.componentInstance.user = user;\n    return modalRef;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Route } from \"../models/route\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RouteService {\n  private apiUrl = \"api/routes/\";\n  constructor(private coreService: CoreService) {}\n\n  getRoutes(\n    page = 1,\n    searchquery = \"\",\n    paginate = true\n  ): Observable<Feedback<Route[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&paginate=${paginate}`\n    );\n  }\n\n  saveRoute(route: Route): Observable<Feedback<Route>> {\n    return this.coreService.postData(route, this.apiUrl);\n  }\n\n  updateRoute(route: Route): Observable<Feedback<Route>> {\n    return this.coreService.putData(route, this.apiUrl);\n  }\n\n  deleteRoute(route: Route): Observable<Feedback<Route>> {\n    return this.coreService.deleteData(route.id, this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Tracker } from \"../models/tracker\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TrackerService {\n  private apiUrl = \"api/trackers/\";\n  constructor(private coreService: CoreService) {}\n\n  getTrackers(\n    page = 1,\n    searchquery = \"\",\n    engineNo = \"\"\n  ): Observable<Feedback<Tracker[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&engineno=${engineNo}`\n    );\n  }\n\n  saveTracker(tracker: Tracker): Observable<Feedback<Tracker>> {\n    return this.coreService.postData(tracker, this.apiUrl);\n  }\n\n  updateTracker(tracker: Tracker): Observable<Feedback<Tracker>> {\n    return this.coreService.putData(tracker, this.apiUrl);\n  }\n\n  deleteTracker(tracker: Tracker): Observable<Feedback<Tracker>> {\n    return this.coreService.deleteData(tracker.id, this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { User } from \"../models/user\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  private apiUrl = \"api/users/\";\n  constructor(private coreService: CoreService) {}\n\n  getUsers(page = 1, searchquery = \"\"): Observable<Feedback<User[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}`\n    );\n  }\n  getUser(email: string): Observable<Feedback<User>> {\n    return this.coreService.getData(`api/user?email=${email}`);\n  }\n\n  saveUser(user: User): Observable<Feedback<User>> {\n    return this.coreService.postData(user, this.apiUrl);\n  }\n\n  updateUser(user: User): Observable<Feedback<User>> {\n    return this.coreService.putData(user, this.apiUrl);\n  }\n\n  deleteUser(user: User): Observable<Feedback<User>> {\n    return this.coreService.deleteData(user.id, this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class VehicleService {\n  private apiUrl = \"api/vehicles/\";\n  constructor(private coreService: CoreService) {}\n\n  getVehicles(\n    page = 1,\n    searchquery = \"\",\n    paginate = true\n  ): Observable<Feedback<Vehicle[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&paginate=${paginate}`\n    );\n  }\n\n  saveVehicle(vehicle: Vehicle): Observable<Feedback<Vehicle>> {\n    return this.coreService.postData(vehicle, this.apiUrl);\n  }\n\n  updateVehicle(vehicle: Vehicle): Observable<Feedback<Vehicle>> {\n    return this.coreService.putData(vehicle, this.apiUrl);\n  }\n\n  deleteVehicle(vehicle: Vehicle): Observable<Feedback<Vehicle>> {\n    return this.coreService.deleteData(vehicle.id, this.apiUrl);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faTh,\n  faCarAlt,\n  faUsers,\n  faUser,\n  faRoute,\n  faTimes,\n  faListAlt,\n  faPowerOff,\n  faHistory,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Component({\n  selector: \"app-sidebar\",\n  templateUrl: \"./sidebar.component.html\",\n  styleUrls: [\"./sidebar.component.css\"],\n})\nexport class SidebarComponent implements OnInit {\n  faTh = faTh;\n  faCarAlt = faCarAlt;\n  faUsers = faUsers;\n  faRoute = faRoute;\n  faTimes = faTimes;\n  faListAlt = faListAlt;\n  faPowerOff = faPowerOff;\n  faHistory = faHistory;\n  faUser = faUser;\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {}\n\n  onLogOut() {\n    this.authService.logout();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWNrZXIvdHJhY2tlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  faCalendarAlt,\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faHistory,\n  faListAlt,\n  faSearch,\n  faSpinner,\n  faTimes,\n  faTrash,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { Driver } from \"../models/driver\";\nimport { Route } from \"../models/route\";\nimport { Tracker } from \"../models/tracker\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { DriverService } from \"../services/driver.service\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { RouteService } from \"../services/route.service\";\nimport { TrackerService } from \"../services/tracker.service\";\nimport { VehicleService } from \"../services/vehicle.service\";\n\n@Component({\n  selector: \"app-tracker\",\n  templateUrl: \"./tracker.component.html\",\n  styleUrls: [\"./tracker.component.css\"],\n})\nexport class TrackerComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faListAlt = faListAlt;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faUser = faUser;\n  faCalendar = faCalendarAlt;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  trackers: Tracker[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  newTracker: Tracker = new Tracker(null, null, null, null);\n  isLoading: boolean;\n  isProcessing: boolean;\n  drivers: Driver[] = [];\n  vehicles: Vehicle[] = [];\n  routes: Route[] = [];\n  engineNo = \"\";\n\n  constructor(\n    public trackerService: TrackerService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService,\n    public driverService: DriverService,\n    public vehicleService: VehicleService,\n    public routeService: RouteService,\n    public route: ActivatedRoute\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n\n    if (mode === ViewModes.NewItemView) {\n      this.newTracker = new Tracker(null, null, null, null);\n    }\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n    this.trackerService\n      .getTrackers(page, this.searchquery, this.engineNo)\n      .subscribe(\n        (response) => {\n          if (response.result) {\n            this.trackers = this.trackers.concat(response.result);\n            this.hasMoreData = response.totalPages > response.currentPage;\n            this.currentPage = Number(response.currentPage);\n          } else {\n            // notify\n            this.notify.showWarning(response.message, \"Loading Failed\");\n          }\n        },\n        (reason) => {\n          this.notify.showError(\n            \"we were unable to contact server\",\n            \"Operation failed\"\n          );\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  saveTracker() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n\n    this.trackerService.saveTracker(this.newTracker).subscribe((response) => {\n      this.isProcessing = false;\n      if (response.success) {\n        this.notify.showSuccess(\"Saved successfully\", \"success\");\n        this.trackers.push(response.result);\n        this.newTracker = new Tracker(null, null, null, null);\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n\n  updateTracker() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n\n    this.trackerService.updateTracker(this.newTracker).subscribe(\n      (response) => {\n        if (response.success) {\n          this.notify.showSuccess(\"updated successfully\", \"success\");\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\"Unable to contact server.\", \"Operation failed\");\n      },\n      () => {\n        this.isProcessing = false;\n      }\n    );\n  }\n\n  onSearch() {\n    this.trackers = [];\n    this.loadData();\n  }\n\n  onEdit(tracker: Tracker) {\n    this.setViewMode(ViewModes.EditView);\n    this.newTracker = tracker;\n  }\n\n  onDelete(tracker: Tracker) {\n    let modalInstance = this.messageBox.showWarning(\n      `Are you sure you want to delete this tracker record?`,\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting history\");\n          this.trackerService.deleteTracker(tracker).subscribe(\n            (response) => {\n              if (response.success) {\n                let index = this.trackers.findIndex((r) => r.id === tracker.id);\n                this.trackers.splice(index, 1);\n                this.notify.showSuccess(\"deleted successfully.\", \"Success\");\n              } else {\n                this.notify.showWarning(response.message, \"Operation failed\");\n              }\n            },\n            (reason) => {\n              this.notify.showError(\n                \"we were unable to contact server.\",\n                \"Operation failed\"\n              );\n            },\n            () => {\n              this.notify.hideProcessing(tid);\n            }\n          );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  ngOnInit() {\n    this.engineNo = this.route.snapshot.params[\"engineNo\"];\n    console.log(this.engineNo);\n    this.loadData();\n    this.driverService.getDrivers(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.drivers = response.result;\n        // console.log(response);\n      }\n    });\n    this.vehicleService.getVehicles(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.vehicles = response.result;\n      }\n    });\n\n    this.routeService.getRoutes(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.routes = response.result;\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { User } from \"../models/user\";\nimport { AuthService } from \"../services/auth.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { UserService } from \"../services/user.service\";\n\n@Component({\n  selector: \"app-user-profile\",\n  templateUrl: \"./user-profile.component.html\",\n  styleUrls: [\"./user-profile.component.css\"],\n})\nexport class UserProfileComponent implements OnInit {\n  faUser = faUser;\n\n  userProfile: User = new User(null, null, null, null, null, null);\n  password: string;\n  isProcessing = false;\n\n  constructor(\n    public userService: UserService,\n    public authService: AuthService,\n    public notify: NotificationService\n  ) {}\n\n  onUpdate() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    let tid = this.notify.showProcessing(\"Updating profile\");\n    this.userService.updateUser(this.userProfile).subscribe(\n      (response) => {\n        this.userProfile.password = undefined;\n        if (response) {\n          this.notify.showSuccess(\"Profile updated successfully.\", \"Success\");\n        } else {\n          this.notify.showWarning(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        console.log(reason);\n        this.notify.showError(\n          \"we were unable to contact server\",\n          \"Operation failed\"\n        );\n      },\n      () => {\n        this.notify.hideProcessing(tid);\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.authService.getCurrentUser().subscribe(\n      (response) => {\n        console.log(response);\n        if (response.success) {\n          this.userProfile = response.result;\n          this.userProfile.password = undefined;\n        }\n      },\n      (reason) => {\n        console.log(reason);\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZlaGljbGUvdmVoaWNsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faSearch,\n  faCog,\n  faCar,\n  faTimes,\n  faEdit,\n  faTrash,\n  faEllipsisH,\n  faSpinner,\n  faHistory,\n  faListAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { Fuel } from \"../models/fuel\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { FuelTypeService } from \"../services/fuel-type.service\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { VehicleService } from \"../services/vehicle.service\";\n\n@Component({\n  selector: \"app-vehicle\",\n  templateUrl: \"./vehicle.component.html\",\n  styleUrls: [\"./vehicle.component.css\"],\n})\nexport class VehicleComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faCar = faCar;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faHistory = faHistory;\n  faListAlt = faListAlt;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  vehicles: Vehicle[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  fuelTypes: Fuel[] = [];\n  newVehicle: Vehicle = {\n    engineNo: \"\",\n    capacity: null,\n    fuelId: null,\n  };\n\n  isLoading: boolean;\n  isProcessing: boolean;\n\n  constructor(\n    public vehicleService: VehicleService,\n    public fuelTypeService: FuelTypeService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n\n    this.vehicleService.getVehicles(page, this.searchquery).subscribe(\n      (response) => {\n        if (response.result) {\n          this.vehicles = this.vehicles.concat(response.result);\n          this.hasMoreData = response.totalPages > response.currentPage;\n          this.currentPage = Number(response.currentPage);\n        } else {\n          // notify\n        }\n      },\n      (reason) => {\n        this.notify.showError(\n          \"We were unable to contact server.\",\n          \"Loading failed.\"\n        );\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  saveVehicle() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.vehicleService.saveVehicle(this.newVehicle).subscribe((response) => {\n      this.isProcessing = false;\n      if (response.success) {\n        this.vehicles.push(response.result);\n        this.newVehicle = new Vehicle(\"\", null, null);\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n\n  updateVehicle() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.vehicleService.updateVehicle(this.newVehicle).subscribe(\n      (response) => {\n        if (response.success) {\n          this.notify.showSuccess(\"vehicle updated successfully\", \"success\");\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\"Unable to contact server.\", \"Operation failed\");\n      },\n      () => {\n        this.isProcessing = false;\n      }\n    );\n  }\n\n  onSearch() {\n    this.vehicles = [];\n    this.loadData();\n  }\n\n  onEdit(vehicle: Vehicle) {\n    this.setViewMode(ViewModes.EditView);\n    this.newVehicle = vehicle;\n  }\n\n  onDelete(vehicle: Vehicle) {\n    let modalInstance = this.messageBox.showWarning(\n      \"Are you sure you want to delete this vehicle?\",\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting vehicle\");\n          this.vehicleService.deleteVehicle(vehicle).subscribe(\n            (response) => {\n              this.notify.hideProcessing(tid);\n              if (response.success) {\n                let index = this.vehicles.findIndex((v) => v.id === vehicle.id);\n                this.vehicles.splice(index, 1);\n                this.notify.showSuccess(\n                  \"vehicle deleted successfully.\",\n                  \"Success\"\n                );\n              } else {\n                this.notify.showWarning(response.message, \"Operation failed\");\n              }\n            },\n            (reason) => {\n              this.notify.showError(\n                \"we were unable to contact server.\",\n                \"Operation failed\"\n              );\n            },\n            () => {}\n          );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.fuelTypeService.getFuelTypes().subscribe((response) => {\n      if (response.success) {\n        this.fuelTypes = response.result;\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}