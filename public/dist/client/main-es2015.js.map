{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/breakdownhistory/breakdownhistory.component.html","./src/app/dashboard/dashboard.component.html","./src/app/driver/driver.component.html","./src/app/forgot-password/forgot-password.component.html","./src/app/login/login.component.html","./src/app/messagebox/messagebox.component.html","./src/app/profile-popup/profile-popup.component.html","./src/app/route/route.component.html","./src/app/sidebar/sidebar.component.html","./src/app/tracker/tracker.component.html","./src/app/user-profile/user-profile.component.html","./src/app/vehicle/vehicle.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/breakdownhistory/breakdownhistory.component.css","./src/app/breakdownhistory/breakdownhistory.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.ts","./src/app/driver/driver.component.css","./src/app/driver/driver.component.ts","./src/app/forgot-password/forgot-password.component.css","./src/app/forgot-password/forgot-password.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/messagebox/messagebox.component.css","./src/app/messagebox/messagebox.component.ts","./src/app/models/app-enums.ts","./src/app/models/breakdown-history.ts","./src/app/models/driver.ts","./src/app/models/route.ts","./src/app/models/tracker.ts","./src/app/models/user.ts","./src/app/models/vehicle.ts","./src/app/profile-popup/profile-popup.component.css","./src/app/profile-popup/profile-popup.component.ts","./src/app/route/route.component.css","./src/app/route/route.component.ts","./src/app/services/auth.service.ts","./src/app/services/breakdown-history.service.ts","./src/app/services/core.service.ts","./src/app/services/dashboard.service.ts","./src/app/services/driver.service.ts","./src/app/services/fuel-type.service.ts","./src/app/services/messagebox.service.ts","./src/app/services/notification.service.ts","./src/app/services/profile-popup.service.ts","./src/app/services/route.service.ts","./src/app/services/tracker.service.ts","./src/app/services/user.service.ts","./src/app/services/vehicle.service.ts","./src/app/sidebar/sidebar.component.css","./src/app/sidebar/sidebar.component.ts","./src/app/tracker/tracker.component.css","./src/app/tracker/tracker.component.ts","./src/app/user-profile/user-profile.component.css","./src/app/user-profile/user-profile.component.ts","./src/app/vehicle/vehicle.component.css","./src/app/vehicle/vehicle.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"wrapper\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<footer class=\\\"text-muted\\\">\\n  <p class=\\\"text-center text-md-right text-lg-center\\\">\\n    <cite>ABC</cite> Transport company vehicle logistics, all &copy; reserved. since {{appYear}}\\n  </p>\\n</footer>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 ml-auto\\\">\\n      <div>\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faHistory\\\"></fa-icon>\\n            Breakdown Histories\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            New Breakdown History\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\" placeholder=\\\"Search by engineNo.\\\"\\n                        [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-lg\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Driver Name</th>\\n                      <th>Vehicle Engine No.</th>\\n                      <th>Description</th>\\n                      <th>Breakdown Date</th>\\n                      <th>Repair Date</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let history of breakdownHistories; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{history.Driver.firstName}} {{history.Driver.lastName}}</td>\\n                      <td>{{history.Vehicle.engineNo}}</td>\\n                      <td>{{history.description}}</td>\\n                      <td>{{history.breakdownDate | date}}</td>\\n                      <td>{{history.repairDate | date}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(history)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit breakdown details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(history)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete breakdown details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <div *ngIf=\\\"isLoading\\\" class=\\\"text-center\\\">\\n                  <span>\\n                    <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                    Loading Routes\\n                  </span>\\n                </div>\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  Add New Breakdown\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Breakdown\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #breakdownForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <textarea name=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Breakdown Description\\\"\\n                      [(ngModel)]=\\\"newBreakdownHistory.description\\\" required></textarea>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"driverId\\\"\\n                      [(ngModel)]=\\\"newBreakdownHistory.driverId\\\" required>\\n                      <option [value]=\\\"null\\\">Select Driver</option>\\n                      <option [value]=\\\"driver.id\\\" *ngFor=\\\"let driver of drivers\\\">\\n                        {{driver.firstName}} {{driver.lastName}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"vehicleId\\\"\\n                      [(ngModel)]=\\\"newBreakdownHistory.vehicleId\\\" required>\\n                      <option [value]=\\\"null\\\">Select Vehicle</option>\\n                      <option [value]=\\\"vehicle.id\\\" *ngFor=\\\"let vehicle of vehicles\\\">\\n                        {{vehicle.engineNo}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <div class=\\\"form-control-custom form-control d-flex align-items-center\\\">\\n                      <input type=\\\"text\\\" name=\\\"breakdownDate\\\" class=\\\"w-100\\\" placeholder=\\\"Breakdown Date\\\"\\n                        [(ngModel)]=\\\"breakdownDate\\\" ngbDatepicker #d=\\\"ngbDatepicker\\\" required readonly\\n                        aria-readonly=\\\"true\\\" />\\n                      <label (click)=\\\"d.toggle()\\\" class=\\\"mb-0 text-info\\\">\\n                        <fa-icon [icon]=\\\"faCalendar\\\"></fa-icon>\\n                      </label>\\n                    </div>\\n\\n                  </div>\\n                  <div class=\\\"form-group\\\" *ngIf=\\\"isEditMode\\\">\\n                    <div class=\\\"form-control-custom form-control d-flex align-items-center\\\">\\n                      <input type=\\\"text\\\" name=\\\"repairDate\\\" class=\\\"w-100\\\" placeholder=\\\"Repair Date\\\"\\n                        [(ngModel)]=\\\"repairDate\\\" ngbDatepicker #d1=\\\"ngbDatepicker\\\" readonly aria-readonly=\\\"true\\\" />\\n                      <label (click)=\\\"d1.toggle()\\\" class=\\\"mb-0 text-info\\\">\\n                        <fa-icon [icon]=\\\"faCalendar\\\"></fa-icon>\\n                      </label>\\n                    </div>\\n                  </div>\\n\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!breakdownForm.form.valid\\\"\\n                      (click)=\\\"saveBreakdown()\\\" *ngIf=\\\"isNewItemMode\\\">\\n                      Save Breakdown\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!breakdownForm.form.valid\\\"\\n                      (click)=\\\"updateBreakdown()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Breakdown\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <div class=\\\"d-flex justify-content-between mt-2\\\">\\n    <h4 class=\\\"text-muted\\\">\\n      <fa-icon [icon]=\\\"faTh\\\"></fa-icon>\\n      Dashboard\\n    </h4>\\n\\n    <button class=\\\"btn btn-sm btn-danger\\\" (click)=\\\"onLogOut()\\\">\\n      <fa-icon [icon]=\\\"faPowerOff\\\"></fa-icon>\\n      Logout\\n    </button>\\n  </div>\\n  <hr class=\\\"socket\\\" />\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6 col-md-4 col-lg-3 mb-2 mx-auto\\\">\\n      <div class=\\\"card border-warning\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            <fa-icon [icon]=\\\"faCar\\\" class=\\\"fa-2x\\\"></fa-icon>\\n          </p>\\n          <span class=\\\"font-weight-bold\\\">\\n            Vehicles\\n          </span>\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            {{summary.totalVehicles}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-6 col-md-4 col-lg-3 mb-2 mx-auto\\\">\\n      <div class=\\\"card border-warning\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            <fa-icon [icon]=\\\"faUsers\\\" class=\\\"fa-2x\\\"></fa-icon>\\n          </p>\\n          <span class=\\\"font-weight-bold\\\">\\n            Drivers\\n          </span>\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            {{summary.totalDrivers}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 col-md-4 col-lg-3 mb-2 mx-auto\\\">\\n      <div class=\\\"card border-warning\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            <fa-icon [icon]=\\\"faRoute\\\" class=\\\"fa-2x\\\"></fa-icon>\\n          </p>\\n          <span class=\\\"font-weight-bold\\\">\\n            Routes\\n          </span>\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            {{summary.totalRoutes}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-6 col-md-4 col-lg-3 mb-2 mx-auto\\\">\\n      <div class=\\\"card border-warning\\\">\\n        <div class=\\\"card-body text-center\\\">\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            <fa-icon [icon]=\\\"faListAlt\\\" class=\\\"fa-2x\\\"></fa-icon>\\n          </p>\\n          <span class=\\\"font-weight-bold\\\">\\n            Tracker\\n          </span>\\n          <p class=\\\"text-center mb-1 pb-0\\\">\\n            {{summary.totalTrackers}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-12 col-lg-8 mx-auto mt-5 p-0\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/profile\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faUser\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Profile</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/vehicletracker\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faListAlt\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Vehicle Tracker</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/vehicles/\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faCar\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Vehicles</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/drivers\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faUsers\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Drivers</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/routes\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faRoute\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Travel Routes</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n\\n\\n      <div class=\\\"col-6 col-md-4 mx-auto mb-2\\\">\\n        <a routerLink=\\\"/breakdownhistories\\\" class=\\\"nav-link-custom\\\">\\n          <div class=\\\"card bg-white\\\">\\n            <div class=\\\"card-body text-center p-1 p-sm-3\\\">\\n              <fa-icon [icon]=\\\"faHistory\\\" class=\\\"fa-4x\\\"></fa-icon>\\n              <h5 class=\\\"text-center\\\">Breakdown History</h5>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 ml-auto\\\">\\n      <div>\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faUsers\\\"></fa-icon>\\n            Drivers\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            New Driver\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\"\\n                        placeholder=\\\"Search driver by last name, first name or email.\\\" [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-lg\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Last Name</th>\\n                      <th>First Name</th>\\n                      <th>Email</th>\\n                      <th>Marital Status</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let driver of drivers; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{driver.lastName}}</td>\\n                      <td>{{driver.firstName}}</td>\\n                      <td>{{driver.email}}</td>\\n                      <td>{{driver.maritalStatus}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onViewProfile(driver)\\\">\\n                              <fa-icon [icon]=\\\"faUser\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              View driver profile\\n                            </label>\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(driver)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit driver details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(driver)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete driver details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  Add New Driver\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Driver\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #driverForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"lastName\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Last Name\\\"\\n                      [(ngModel)]=\\\"newDriver.lastName\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"firstName\\\" class=\\\"form-control form-control-custom\\\"\\n                      placeholder=\\\"First Name\\\" [(ngModel)]=\\\"newDriver.firstName\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control form-control-custom\\\"\\n                      placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"newDriver.email\\\" required email />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"tel\\\" name=\\\"mobile\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Mobile No.\\\"\\n                      [(ngModel)]=\\\"newDriver.mobile\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select name=\\\"maritalStatus\\\" class=\\\"form-control form-control-custom\\\"\\n                      [(ngModel)]=\\\"newDriver.maritalStatus\\\" required>\\n                      <option [value]=\\\"null\\\">Marital Status</option>\\n                      <option value=\\\"single\\\">\\n                        Single\\n                      </option>\\n                      <option value=\\\"married\\\">\\n                        Married\\n                      </option>\\n                      <option value=\\\"divorced\\\">\\n                        Divorced\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!driverForm.form.valid\\\"\\n                      (click)=\\\"saveDriver()\\\" *ngIf=\\\"isNewItemMode\\\">\\n                      Save Driver\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!driverForm.form.valid\\\"\\n                      (click)=\\\"updateDriver()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Driver\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"col-12 col-sm-7 col-md-6 col-lg-5 col-xl-4 mx-auto my-5\\\">\\n  <a routerLink=\\\"/login\\\" class=\\\"btn btn-warning btn-sm mb-2 btn-rounded\\\">\\n    <fa-icon [icon]=\\\"faArrowCircleLeft\\\"></fa-icon>\\n    Login\\n  </a>\\n  <div class=\\\"card shadow\\\">\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"text-center\\\">\\n        <img src=\\\"/assets/logo.png\\\" alt=\\\"abc logo\\\" class=\\\"logo\\\">\\n\\n        <h5 class=\\\"mt-3 text-muted\\\">\\n          Reset Forgotten Password\\n        </h5>\\n      </div>\\n\\n\\n      <form #confirmEmailForm=\\\"ngForm\\\" *ngIf=\\\"!isValidEmail\\\">\\n        <div class=\\\"form-group mt-3\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <input type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" id=\\\"email\\\" autocomplete=\\\"off\\\" #email=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"confirmEmail.email\\\" email required />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-rounded btn-outline-success\\\" (click)=\\\"onConfirmEmail()\\\"\\n            [disabled]=\\\"!confirmEmailForm.form.valid\\\">\\n            Continue\\n            <fa-icon [icon]=\\\"faArrowCircleRight\\\"></fa-icon>\\n          </button>\\n        </div>\\n      </form>\\n\\n      <form #resetPasswordForm=\\\"ngForm\\\" *ngIf=\\\"isValidEmail\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" autocomplete=\\\"off\\\"\\n              [(ngModel)]=\\\"resetPassword.password\\\" required />\\n          </div>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <input type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" name=\\\"confirmPassword\\\" #password=\\\"ngModel\\\"\\n              autocomplete=\\\"off\\\" [(ngModel)]=\\\"resetPassword.confirmPassword\\\" required />\\n          </div>\\n          <span class=\\\"text-danger mt-1\\\" *ngIf=\\\"resetPassword.confirmPassword !== resetPassword.password\\\">\\n            <small>Password does not match</small>\\n          </span>\\n        </div>\\n\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-rounded btn-outline-success\\\" (click)=\\\"onResetPassword()\\\"\\n            [disabled]=\\\"!resetPasswordForm.form.valid\\\">\\n            Reset Password\\n          </button>\\n        </div>\\n      </form>\\n\\n      <div *ngIf=\\\"isProcessing\\\" class=\\\"text-center\\\">\\n        <span>\\n          <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n          Processing request\\n        </span>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"col-12 col-sm-7 col-md-6 col-lg-5 col-xl-4 mx-auto my-5\\\">\\n  <form #loginForm=\\\"ngForm\\\">\\n    <div class=\\\"card shadow\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"text-center\\\">\\n          <img src=\\\"/assets/logo.png\\\" alt=\\\"abc logo\\\" class=\\\"logo\\\">\\n        </div>\\n\\n        <div class=\\\"my-2\\\" *ngIf=\\\"isProcessing\\\">\\n          <div class=\\\"progress\\\">\\n            <div class=\\\"progress-bar progress-bar-striped progress-bar-animated bg-success\\\" style=\\\"width:100%\\\">\\n              authenticating...\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group mt-3\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <span class=\\\"mr-2 text-muted\\\">\\n              <fa-icon [icon]=\\\"faEnvelope\\\"></fa-icon>\\n            </span>\\n            <input type=\\\"email\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" id=\\\"email\\\" autocomplete=\\\"off\\\" #email=\\\"ngModel\\\"\\n              [(ngModel)]=\\\"loginModel.email\\\" email required />\\n          </div>\\n\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"d-flex form-control form-control-custom\\\">\\n            <span class=\\\"mr-2 text-muted\\\">\\n              <fa-icon [icon]=\\\"faLock\\\"></fa-icon>\\n            </span>\\n            <input type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" autocomplete=\\\"off\\\"\\n              [(ngModel)]=\\\"loginModel.password\\\" required />\\n          </div>\\n\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <button class=\\\"btn btn-rounded btn-outline-success\\\" (click)=\\\"onLogin()\\\" [disabled]=\\\"!loginForm.form.valid\\\">\\n            Login\\n            <fa-icon [icon]=\\\"faSignInAlt\\\"></fa-icon>\\n          </button>\\n        </div>\\n        <div class=\\\"form-group text-center\\\">\\n          <a routerLink=\\\"/forgot/password\\\">\\n            <small>\\n              Forgot your password?\\n            </small>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","export default \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">\\n    {{settings.title}}\\n  </h5>\\n</div>\\n<div class=\\\"modal-body text-center\\\">\\n  <p class=\\\"text-center\\\" *ngIf=\\\"settings.type == 0\\\">\\n    <fa-icon [icon]=\\\"faExclamationTriangle\\\" class=\\\"fa-2x text-warning\\\"></fa-icon>\\n  </p>\\n\\n  <p class=\\\"text-center\\\" *ngIf=\\\"settings.type == 1\\\">\\n    <fa-icon [icon]=\\\"faCheckCircle\\\" class=\\\"fa-2x text-success\\\"></fa-icon>\\n  </p>\\n\\n  <p class=\\\"text-center\\\" *ngIf=\\\"settings.type == 2\\\">\\n    <fa-icon [icon]=\\\"faInfoCircle\\\" class=\\\"fa-2x text-info\\\"></fa-icon>\\n  </p>\\n\\n  {{settings.message}}\\n</div>\\n<div class=\\\"modal-footer\\\">\\n  <div *ngIf=\\\"settings.type == 0\\\">\\n    <button class=\\\"btn btn-sm btn-danger mr-2\\\" (click)=\\\"cancel()\\\">\\n      Cancel\\n    </button>\\n    <button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"ok()\\\">\\n      Continue\\n    </button>\\n  </div>\\n  <div *ngIf=\\\"settings.type == 1\\\">\\n    <button class=\\\"btn btn-sm btn-success\\\" (click)=\\\"ok()\\\">\\n      Ok\\n    </button>\\n  </div>\\n  <div *ngIf=\\\"settings.type == 2\\\">\\n    <button class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"close()\\\">\\n      Close\\n    </button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"modal-header border-0\\\">\\n  <h5 class=\\\"modal-title\\\">\\n    <fa-icon [icon]=\\\"faIdCard\\\" class=\\\"text-info\\\"></fa-icon>\\n    <span class=\\\"text-secondary\\\">\\n      Profile\\n    </span>\\n  </h5>\\n  <a href=\\\"javascript: void(0)\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n    <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n  </a>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"row align-items-center\\\">\\n    <div class=\\\"col-md-5 mb-2\\\">\\n      <div class=\\\"avatar mx-auto\\\">\\n        <img src=\\\"assets/avatar.png\\\" alt=\\\"user profile picture\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-7 mb-2\\\">\\n      <div class=\\\"card bg-light\\\">\\n        <div class=\\\"card-body\\\">\\n          <p class=\\\"mb-1\\\">\\n            <b>Name:</b>\\n            <span class=\\\"text-capitalize\\\">\\n              {{user.firstName}} {{user.lastName}}\\n            </span>\\n          </p>\\n          <hr class=\\\"socket mt-0\\\">\\n          <p class=\\\"mb-1\\\">\\n            <b>Email:</b>\\n            <span>\\n              {{user.email}}\\n            </span>\\n          </p>\\n          <hr class=\\\"socket mt-0\\\">\\n          <p class=\\\"mb-1\\\">\\n            <b>Mobile:</b>\\n            <span>\\n              {{user.mobile}}\\n            </span>\\n          </p>\\n          <hr class=\\\"socket mt-0\\\">\\n          <p class=\\\"mb-1\\\">\\n            <b>Marital Status:</b>\\n            <span class=\\\"text-capitalize\\\">\\n              {{user.maritalStatus}}\\n            </span>\\n          </p>\\n          <hr class=\\\"socket mt-0\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 ml-auto\\\">\\n      <div>\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faRoute\\\"></fa-icon>\\n            Travel Routes\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            New Route\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\" placeholder=\\\"Search route by departure or destination.\\\"\\n                        [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-md\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Departed From</th>\\n                      <th>Destination</th>\\n                      <th>Scheduled At</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let route of routes; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{route.departure}}</td>\\n                      <td>{{route.destination}}</td>\\n                      <td>{{route.scheduledAt}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(route)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit route details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(route)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete route details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <div *ngIf=\\\"isLoading\\\" class=\\\"text-center\\\">\\n                  <span>\\n                    <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                    Loading Routes\\n                  </span>\\n                </div>\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  Add New Route\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Route\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #routeForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"departure\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Departure\\\"\\n                      [(ngModel)]=\\\"newRoute.departure\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"destination\\\" class=\\\"form-control form-control-custom\\\"\\n                      placeholder=\\\"Destination\\\" [(ngModel)]=\\\"newRoute.destination\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group text-center\\\">\\n                    <label for=\\\"schedule\\\">\\n                      Travel Schedule\\n                    </label>\\n                    <input type=\\\"text\\\" id=\\\"schedule\\\" name=\\\"scheduledAt\\\" class=\\\"form-control form-control-custom\\\"\\n                      placeholder=\\\"Schedule\\\" [value]=\\\"time.hour + ':' + time.minute + ' ' + getMeridan()\\\" required\\n                      readonly aria-readonly />\\n                    <ngb-timepicker [(ngModel)]=\\\"time\\\" [meridian]=\\\"true\\\" name=\\\"time\\\"></ngb-timepicker>\\n                  </div>\\n\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!routeForm.form.valid\\\" (click)=\\\"saveRoute()\\\"\\n                      *ngIf=\\\"isNewItemMode\\\">\\n                      Save Route\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!routeForm.form.valid\\\"\\n                      (click)=\\\"updateRoute()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Route\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<nav class=\\\"navbar navbar-expand-md navbar-light\\\">\\n  <button class=\\\"navbar-toggler ml-auto\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#topMenu\\\">\\n    <span class=\\\"line-1\\\"></span>\\n    <span class=\\\"line-2\\\"></span>\\n    <span class=\\\"line-3\\\"></span>\\n  </button>\\n  <div class=\\\"navbar-collapse collapse\\\" id=\\\"topMenu\\\">\\n\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12 col-md-4 col-lg-3 col-xl-2 p-0 bg-dark fixed-top sidebar\\\">\\n          <div class=\\\"text-right\\\">\\n            <button class=\\\"navbar-toggler mt-1 mr-1 text-light\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#topMenu\\\">\\n              <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n            </button>\\n          </div>\\n          <div class=\\\"my-2 text-center\\\">\\n            <img src=\\\"/assets/logo.png\\\" alt=\\\"abc logo\\\" class=\\\"logo\\\">\\n            <p class=\\\"text-light mt-1\\\">Vehicle Logisitics</p>\\n          </div>\\n          <ul class=\\\"navbar-nav flex-column\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/dashboard\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faTh\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Dashboard\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/profile\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faUser\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Profile\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/vehicletracker\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faListAlt\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Tracker\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/breakdownhistories\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faHistory\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Breakdown History\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/vehicles/\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faCarAlt\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Vehicle\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/drivers\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faUsers\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Driver\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a routerLink=\\\"/routes\\\" class=\\\"nav-link\\\">\\n                <fa-icon [icon]=\\\"faRoute\\\" class=\\\"text-warning mr-2\\\"></fa-icon>\\n                Route\\n              </a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a href=\\\"javascript: void(0)\\\" class=\\\"nav-link\\\" (click)=\\\"onLogOut()\\\">\\n                <fa-icon [icon]=\\\"faPowerOff\\\" class=\\\"text-danger mr-2\\\"></fa-icon>\\n                logout\\n              </a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 ml-auto\\\">\\n      <div>\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faListAlt\\\"></fa-icon>\\n            Vehicle Tracker\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            Track Vehicle\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\" placeholder=\\\"Search by driver name\\\" [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-lg\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Driver Name</th>\\n                      <th>Vehicle Engine No.</th>\\n                      <th>Departs From</th>\\n                      <th>Destination</th>\\n                      <th>Scheduled At</th>\\n                      <th>Date</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let tracker of trackers; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{tracker.Driver.firstName}} {{tracker.Driver.lastName}}</td>\\n                      <td>{{tracker.Vehicle.engineNo}}</td>\\n                      <td>{{tracker.Route.departure}}</td>\\n                      <td>{{tracker.Route.destination}}</td>\\n                      <td>{{tracker.Route.scheduledAt}}</td>\\n                      <td>{{tracker.createdAt | date}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(tracker)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit tracker details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(tracker)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete tracker details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n                <div *ngIf=\\\"isLoading\\\" class=\\\"text-center\\\">\\n                  <span>\\n                    <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                    Loading Vehicle Tracker\\n                  </span>\\n                </div>\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  New Tracker Record\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Tracker Record\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #trackerForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"driverId\\\" [(ngModel)]=\\\"newTracker.driverId\\\"\\n                      required>\\n                      <option [value]=\\\"null\\\">Select Driver</option>\\n                      <option [value]=\\\"driver.id\\\" *ngFor=\\\"let driver of drivers\\\">\\n                        {{driver.firstName}} {{driver.lastName}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"vehicleId\\\" [(ngModel)]=\\\"newTracker.vehicleId\\\"\\n                      required>\\n                      <option [value]=\\\"null\\\">Select Vehicle</option>\\n                      <option [value]=\\\"vehicle.id\\\" *ngFor=\\\"let vehicle of vehicles\\\">\\n                        {{vehicle.engineNo}}\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n                  <div class=\\\"form-group\\\">\\n                    <select class=\\\"form-control form-control-custom\\\" name=\\\"routeId\\\" [(ngModel)]=\\\"newTracker.routeId\\\"\\n                      required>\\n                      <option [value]=\\\"null\\\">Select Travel Route</option>\\n                      <option [value]=\\\"route.id\\\" *ngFor=\\\"let route of routes\\\">\\n                        {{route.departure}} -> {{route.destination}} ({{route.scheduledAt}})\\n                      </option>\\n                    </select>\\n                  </div>\\n\\n\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!trackerForm.form.valid\\\"\\n                      (click)=\\\"saveTracker()\\\" *ngIf=\\\"isNewItemMode\\\">\\n                      Save Tracker\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!trackerForm.form.valid\\\"\\n                      (click)=\\\"updateTracker()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Tracker\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 p-0 ml-auto\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faUser\\\"></fa-icon>\\n            Profile\\n          </h5>\\n        </div>\\n        <hr class=\\\"socket\\\" />\\n\\n        <div class=\\\"card rounded mt-1 mt-sm-5\\\">\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row align-items-center\\\">\\n              <div class=\\\"col-12 col-md-5 col-lg-4 mx-auto text-center mb-2\\\">\\n                <img src=\\\"/assets/avatar.png\\\" alt=\\\"profile pics\\\" class=\\\"avatar\\\" />\\n              </div>\\n              <div class=\\\"col-12 col-md-7 col-lg-8 mx-auto mb-2\\\">\\n                <div class=\\\"card rounded bg-light\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <form #userForm=\\\"ngForm\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-custom\\\" name=\\\"lastName\\\"\\n                          placeholder=\\\"Last Name\\\" [(ngModel)]=\\\"userProfile.lastName\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-custom\\\" name=\\\"firstName\\\"\\n                          placeholder=\\\"First Name\\\" [(ngModel)]=\\\"userProfile.firstName\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"email\\\" class=\\\"form-control form-control-custom\\\" name=\\\"email\\\"\\n                          placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"userProfile.email\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"tel\\\" class=\\\"form-control form-control-custom\\\" name=\\\"mobile\\\"\\n                          placeholder=\\\"Mobile No.\\\" [(ngModel)]=\\\"userProfile.mobile\\\">\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <input type=\\\"password\\\" class=\\\"form-control form-control-custom\\\" name=\\\"password\\\"\\n                          [(ngModel)]=\\\"userProfile.password\\\" placeholder=\\\"Reset Password\\\">\\n                      </div>\\n                      <div class=\\\"form-group text-center\\\">\\n                        <button class=\\\"btn btn-success btn-rounded\\\" (click)=\\\"onUpdate()\\\">\\n                          Update profile\\n                        </button>\\n                      </div>\\n                    </form>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<app-sidebar></app-sidebar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-md-8 col-lg-9 col-xl-10 p-0 ml-auto\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"d-flex justify-content-between mb-0\\\">\\n          <h5 class=\\\"mr-1 mb-0 text-muted font-style-italic\\\">\\n            <fa-icon [icon]=\\\"faCar\\\"></fa-icon>\\n            Vehicles\\n          </h5>\\n\\n          <button class=\\\"btn btn-warning\\\" (click)=\\\"setViewMode(2)\\\">\\n            New Vehicle\\n          </button>\\n        </div>\\n        <hr class=\\\"socket mt-1\\\" />\\n\\n        <div class=\\\"row flex-wrap-reverse\\\">\\n          <div class=\\\"col-12 mb-2\\\" [ngClass]=\\\"{'col-md-7 col-lg-8 col-xl-9': !isMainMode}\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <div>\\n                  <form class=\\\"w-100\\\">\\n                    <div class=\\\"form-control form-control-custom d-flex\\\">\\n                      <input type=\\\"search\\\" name=\\\"searchquery\\\" placeholder=\\\"Search vehicle by engine no.\\\"\\n                        [(ngModel)]=\\\"searchquery\\\" />\\n                      <button class=\\\"btn my-0 py-0\\\" (click)=\\\"onSearch()\\\">\\n                        <fa-icon [icon]=\\\"faSearch\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </form>\\n                </div>\\n              </div>\\n              <div class=\\\"card-body scrollable\\\">\\n                <table class=\\\"table table-striped table-hover table-md\\\">\\n                  <thead>\\n                    <tr>\\n                      <th>#</th>\\n                      <th>Engine No</th>\\n                      <th>Capacity</th>\\n                      <th>Fuel Type</th>\\n                      <th>Status</th>\\n                      <th>\\n                        <fa-icon [icon]=\\\"faCog\\\"></fa-icon>\\n                        Action\\n                      </th>\\n                    </tr>\\n                  </thead>\\n                  <tbody>\\n                    <tr *ngFor=\\\"let vehicle of vehicles; index as i;\\\">\\n                      <td>{{i+1}}</td>\\n                      <td>{{vehicle.engineNo}}</td>\\n                      <td>{{vehicle.capacity}}</td>\\n                      <td>{{vehicle.Fuel.type}}</td>\\n                      <td>{{vehicle.isFunctional ? \\\"active\\\" : \\\"faulty\\\"}}</td>\\n                      <td class=\\\"text-center\\\">\\n                        <div class=\\\"dropdown\\\">\\n                          <button class=\\\"btn btn-sm btn-info\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"d-flex align-items-center\\\">\\n                              <span>more</span>\\n                              <fa-icon [icon]=\\\"faEllipsisH\\\" class=\\\"ml-1\\\"></fa-icon>\\n                            </div>\\n                          </button>\\n                          <div class=\\\"dropdown-menu\\\">\\n                            <a [routerLink]=\\\"'/breakdownhistories/' + vehicle.engineNo\\\" class=\\\"dropdown-item\\\">\\n                              <fa-icon [icon]=\\\"faHistory\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Breakdown History\\n                            </a>\\n                            <a [routerLink]=\\\"'/vehicletracker/' + vehicle.engineNo\\\" class=\\\"dropdown-item\\\">\\n                              <fa-icon [icon]=\\\"faListAlt\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Tracker Record\\n                            </a>\\n                            <label class=\\\"dropdown-item\\\" (click)=\\\"onEdit(vehicle)\\\">\\n                              <fa-icon [icon]=\\\"faEdit\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Edit vehicle details\\n                            </label>\\n                            <label href=\\\"#\\\" class=\\\"dropdown-item\\\" (click)=\\\"onDelete(vehicle)\\\">\\n                              <fa-icon [icon]=\\\"faTrash\\\" class=\\\"mr-2\\\"></fa-icon>\\n                              Delete vehicle details\\n                            </label>\\n                          </div>\\n                        </div>\\n\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n\\n                <button *ngIf=\\\"hasMoreData\\\" class=\\\"btn btn-sm btn-outline-info\\\" (click)=loadData(currentPage+1)>\\n                  Load More...\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"col-12 col-md-5 col-lg-4 col-xl-3 mb-2\\\" *ngIf=\\\"isNewItemMode || isEditMode\\\">\\n            <div class=\\\"text-right\\\" (click)=\\\"onBackToMain()\\\">\\n              <button class=\\\"btn\\\">\\n                <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n              </button>\\n            </div>\\n            <!-- New Item Form -->\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header bg-white\\\">\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isNewItemMode\\\">\\n                  Add New Vehicle\\n                </h5>\\n                <h5 class=\\\"text-muted\\\" *ngIf=\\\"isEditMode\\\">\\n                  Edit Vehicle\\n                </h5>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <form #newVehicleForm=\\\"ngForm\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"text\\\" name=\\\"engineNo\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Engine No.\\\"\\n                      [(ngModel)]=\\\"newVehicle.engineNo\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <input type=\\\"number\\\" name=\\\"capacity\\\" class=\\\"form-control form-control-custom\\\" placeholder=\\\"Capacity\\\"\\n                      [(ngModel)]=\\\"newVehicle.capacity\\\" required />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <select name=\\\"fuelId\\\" class=\\\"form-control form-control-custom\\\" [(ngModel)]=\\\"newVehicle.fuelId\\\"\\n                      required>\\n                      <option [value]=\\\"null\\\">Fuel Type</option>\\n                      <option *ngFor=\\\"let fuel of fuelTypes\\\" [value]=\\\"fuel.id\\\">\\n                        {{fuel.type}}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div class=\\\"form-group text-center\\\">\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!newVehicleForm.form.valid\\\"\\n                      (click)=\\\"saveVehicle()\\\" *ngIf=\\\"isNewItemMode\\\">\\n                      Save Vehicle\\n                    </button>\\n\\n                    <button class=\\\"btn btn-success btn-rounded\\\" [disabled]=\\\"!newVehicleForm.form.valid\\\"\\n                      (click)=\\\"updateVehicle()\\\" *ngIf=\\\"isEditMode\\\">\\n                      Update Vehicle\\n                    </button>\\n\\n                    <div class=\\\" text-center mt-2\\\" *ngIf=\\\"isProcessing\\\">\\n                      <span>\\n                        <fa-icon [icon]=\\\"faSpinner\\\" [spin]=\\\"true\\\"></fa-icon>\\n                        processing request\\n                      </span>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div>\\n            </div>\\n            <!-- New Item Form -->\\n          </div>\\n        </div>\\n\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { VehicleComponent } from \"./vehicle/vehicle.component\";\nimport { DriverComponent } from \"./driver/driver.component\";\nimport { RouteComponent } from \"./route/route.component\";\nimport { BreakdownhistoryComponent } from \"./breakdownhistory/breakdownhistory.component\";\nimport { TrackerComponent } from \"./tracker/tracker.component\";\nimport { UserProfileComponent } from \"./user-profile/user-profile.component\";\nimport { AuthGuard } from \"./auth.guard\";\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\n\nconst routes: Routes = [\n  { path: \"\", canActivate: [AuthGuard], component: DashboardComponent },\n  {\n    path: \"login\",\n    component: LoginComponent,\n  },\n  {\n    path: \"dashboard\",\n    canActivate: [AuthGuard],\n    component: DashboardComponent,\n  },\n  {\n    path: \"vehicles\",\n    canActivate: [AuthGuard],\n    component: VehicleComponent,\n  },\n  {\n    path: \"drivers\",\n    canActivate: [AuthGuard],\n    component: DriverComponent,\n  },\n  {\n    path: \"routes\",\n    canActivate: [AuthGuard],\n    component: RouteComponent,\n  },\n  {\n    path: \"breakdownhistories\",\n    canActivate: [AuthGuard],\n    component: BreakdownhistoryComponent,\n  },\n  {\n    path: \"breakdownhistories/:engineNo\",\n    canActivate: [AuthGuard],\n    component: BreakdownhistoryComponent,\n  },\n  {\n    path: \"vehicletracker\",\n    canActivate: [AuthGuard],\n    component: TrackerComponent,\n  },\n  {\n    path: \"vehicletracker/:engineNo\",\n    canActivate: [AuthGuard],\n    component: TrackerComponent,\n  },\n  {\n    path: \"profile\",\n    canActivate: [AuthGuard],\n    component: UserProfileComponent,\n  },\n  {\n    path: \"forgot/password\",\n    component: ForgotPasswordComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  title = \"Vehicle Logistics\";\n  appYear = new Date().getFullYear();\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ToastrModule } from \"ngx-toastr\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { DriverComponent } from \"./driver/driver.component\";\nimport { VehicleComponent } from \"./vehicle/vehicle.component\";\nimport { SidebarComponent } from \"./sidebar/sidebar.component\";\nimport { MessageboxComponent } from \"./messagebox/messagebox.component\";\nimport { ProfilePopupComponent } from \"./profile-popup/profile-popup.component\";\nimport { RouteComponent } from \"./route/route.component\";\nimport { BreakdownhistoryComponent } from \"./breakdownhistory/breakdownhistory.component\";\nimport { TrackerComponent } from \"./tracker/tracker.component\";\nimport { UserProfileComponent } from \"./user-profile/user-profile.component\";\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\n\n// this function retrieves the token\nexport function tokenGetter() {\n  return localStorage.getItem(\"access_token\");\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    DriverComponent,\n    VehicleComponent,\n    SidebarComponent,\n    MessageboxComponent,\n    ProfilePopupComponent,\n    RouteComponent,\n    BreakdownhistoryComponent,\n    TrackerComponent,\n    UserProfileComponent,\n    ForgotPasswordComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      progressBar: true,\n      timeOut: 5000,\n      maxOpened: 1,\n    }),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter,\n        allowedDomains: [\"localhost:4100\"],\n        disallowedRoutes: [\"localhost:4100/api/auth/\"],\n      },\n    }),\n    NgbModule,\n  ],\n  entryComponents: [MessageboxComponent, ProfilePopupComponent],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { NotificationService } from \"./services/notification.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private notify: NotificationService) {}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (localStorage) {\n      if (localStorage.getItem(\"access_token\")) {\n        return true;\n      } else {\n        this.notify.showWarning(\n          \"You must login before you can view this page\",\n          \"Warning\"\n        );\n        this.router.navigate([\"/login\"]);\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JyZWFrZG93bmhpc3RvcnkvYnJlYWtkb3duaGlzdG9yeS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  faCalendar,\n  faCalendarAlt,\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faHistory,\n  faRoute,\n  faSearch,\n  faSpinner,\n  faTimes,\n  faTrash,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { BreakdownHistory } from \"../models/breakdown-history\";\nimport { Driver } from \"../models/driver\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { BreakdownHistoryService } from \"../services/breakdown-history.service\";\nimport { DriverService } from \"../services/driver.service\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { VehicleService } from \"../services/vehicle.service\";\n\n@Component({\n  selector: \"app-breakdownhistory\",\n  templateUrl: \"./breakdownhistory.component.html\",\n  styleUrls: [\"./breakdownhistory.component.css\"],\n})\nexport class BreakdownhistoryComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faHistory = faHistory;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faUser = faUser;\n  faCalendar = faCalendarAlt;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  breakdownHistories: BreakdownHistory[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  newBreakdownHistory: BreakdownHistory = new BreakdownHistory(\n    null,\n    null,\n    null,\n    null\n  );\n  isLoading: boolean;\n  isProcessing: boolean;\n  drivers: Driver[] = [];\n  vehicles: Vehicle[] = [];\n  breakdownDate: { year: number; month: number; day: number };\n  repairDate: { year: number; month: number; day: number };\n  engineNo: string;\n\n  constructor(\n    public breakdownHistoryService: BreakdownHistoryService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService,\n    public driverService: DriverService,\n    public vehicleService: VehicleService,\n    public route: ActivatedRoute\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n\n    if (mode === ViewModes.NewItemView) {\n      this.newBreakdownHistory = new BreakdownHistory(null, null, null, null);\n      this.breakdownDate = null;\n      this.repairDate = null;\n    }\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n    this.breakdownHistoryService\n      .getHistories(page, this.searchquery, this.engineNo)\n      .subscribe(\n        (response) => {\n          if (response.result) {\n            this.breakdownHistories = this.breakdownHistories.concat(\n              response.result\n            );\n            this.hasMoreData = response.totalPages > response.currentPage;\n            this.currentPage = Number(response.currentPage);\n          } else {\n            // notify\n            this.notify.showWarning(response.message, \"Loading Failed\");\n          }\n        },\n        (reason) => {\n          this.notify.showError(\n            \"we were unable to contact server\",\n            \"Operation failed\"\n          );\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  saveBreakdown() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.setDates();\n\n    this.breakdownHistoryService\n      .saveHistory(this.newBreakdownHistory)\n      .subscribe((response) => {\n        this.isProcessing = false;\n        if (response.success) {\n          this.notify.showSuccess(\"Saved successfully\", \"success\");\n          this.breakdownHistories.push(response.result);\n          this.newBreakdownHistory = new BreakdownHistory(\n            null,\n            null,\n            null,\n            null\n          );\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      });\n  }\n\n  updateBreakdown() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.setDates();\n\n    this.breakdownHistoryService\n      .updateHistory(this.newBreakdownHistory)\n      .subscribe(\n        (response) => {\n          if (response.success) {\n            this.notify.showSuccess(\n              \"breakdown history updated successfully\",\n              \"success\"\n            );\n          } else {\n            this.notify.showError(response.message, \"Operation failed\");\n          }\n        },\n        (reason) => {\n          this.notify.showError(\n            \"Unable to contact server.\",\n            \"Operation failed\"\n          );\n        },\n        () => {\n          this.isProcessing = false;\n        }\n      );\n  }\n\n  onSearch() {\n    this.breakdownHistories = [];\n    this.loadData();\n  }\n\n  onEdit(breakdownHistory: BreakdownHistory) {\n    this.setViewMode(ViewModes.EditView);\n    this.newBreakdownHistory = breakdownHistory;\n    this.newBreakdownHistory.vehicleId = Number(breakdownHistory.vehicleId);\n    let d = new Date(breakdownHistory.breakdownDate);\n    this.breakdownDate = {\n      year: d.getFullYear(),\n      month: d.getMonth() + 1,\n      day: d.getDate(),\n    };\n\n    if (breakdownHistory.repairDate) {\n      d = new Date(breakdownHistory.repairDate);\n      this.repairDate = {\n        year: d.getFullYear(),\n        month: d.getMonth() + 1,\n        day: d.getDate(),\n      };\n    } else {\n      this.repairDate = null;\n    }\n  }\n\n  onDelete(breakdownHistory: BreakdownHistory) {\n    let modalInstance = this.messageBox.showWarning(\n      `Are you sure you want to delete this breakdown history?`,\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting history\");\n          this.breakdownHistoryService\n            .deleteHistory(breakdownHistory)\n            .subscribe(\n              (response) => {\n                if (response.success) {\n                  let index = this.breakdownHistories.findIndex(\n                    (r) => r.id === breakdownHistory.id\n                  );\n                  this.breakdownHistories.splice(index, 1);\n                  this.notify.showSuccess(\n                    \"breakdown history deleted successfully.\",\n                    \"Success\"\n                  );\n                } else {\n                  this.notify.showWarning(response.message, \"Operation failed\");\n                }\n              },\n              (reason) => {\n                this.notify.showError(\n                  \"we were unable to contact server.\",\n                  \"Operation failed\"\n                );\n              },\n              () => {\n                this.notify.hideProcessing(tid);\n              }\n            );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  ngOnInit() {\n    this.engineNo = this.route.snapshot.params[\"engineNo\"];\n    this.loadData();\n    this.driverService.getDrivers(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.drivers = response.result;\n        console.log(response);\n      }\n    });\n    this.vehicleService.getVehicles(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.vehicles = response.result;\n      }\n    });\n  }\n\n  setDates() {\n    if (this.breakdownDate) {\n      this.newBreakdownHistory.breakdownDate = `${this.breakdownDate.year}-${this.breakdownDate.month}-${this.breakdownDate.day}`;\n    }\n    if (this.repairDate) {\n      this.newBreakdownHistory.repairDate = `${this.repairDate.year}-${this.repairDate.month}-${this.repairDate.day}`;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faCar,\n  faHistory,\n  faListAlt,\n  faPowerOff,\n  faRoute,\n  faTh,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Summary } from \"../models/summary\";\nimport { AuthService } from \"../services/auth.service\";\nimport { DashboardService } from \"../services/dashboard.service\";\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  faUser = faUser;\n  faUsers = faUsers;\n  faCar = faCar;\n  faListAlt = faListAlt;\n  faRoute = faRoute;\n  faHistory = faHistory;\n  faTh = faTh;\n  faPowerOff = faPowerOff;\n\n  summary: Summary = {\n    totalDrivers: 0,\n    totalRoutes: 0,\n    totalTrackers: 0,\n    totalVehicles: 0,\n  };\n  constructor(\n    public dashboard: DashboardService,\n    public authService: AuthService\n  ) {}\n\n  ngOnInit() {\n    this.dashboard.getSummary().subscribe((response) => {\n      if (response.success) {\n        this.summary = response.result;\n        console.log(response);\n      }\n    });\n  }\n\n  onLogOut() {\n    this.authService.logout();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RyaXZlci9kcml2ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faUsers,\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faSearch,\n  faSpinner,\n  faTimes,\n  faTrash,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { Driver } from \"../models/driver\";\nimport { Fuel } from \"../models/fuel\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { DriverService } from \"../services/driver.service\";\nimport { FuelTypeService } from \"../services/fuel-type.service\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { ProfilePopupService } from \"../services/profile-popup.service\";\nimport { VehicleService } from \"../services/vehicle.service\";\n\n@Component({\n  selector: \"app-driver\",\n  templateUrl: \"./driver.component.html\",\n  styleUrls: [\"./driver.component.css\"],\n})\nexport class DriverComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faUsers = faUsers;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faUser = faUser;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  drivers: Driver[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  newDriver: Driver = new Driver(null, null, null, null, null, null);\n\n  isLoading: boolean;\n  isProcessing: boolean;\n\n  constructor(\n    public driverService: DriverService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService,\n    public profilePopup: ProfilePopupService\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n\n    this.driverService.getDrivers(page, this.searchquery).subscribe(\n      (response) => {\n        if (response.result) {\n          this.drivers = this.drivers.concat(response.result);\n          this.hasMoreData = response.totalPages > response.currentPage;\n          this.currentPage = Number(response.currentPage);\n        } else {\n          // notify\n          this.notify.showWarning(response.message, \"Loading Failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\n          \"we were unable to contact server\",\n          \"Operation failed\"\n        );\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  saveDriver() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.driverService.saveDriver(this.newDriver).subscribe((response) => {\n      this.isProcessing = false;\n      if (response.success) {\n        this.drivers.push(response.result);\n        this.newDriver = new Driver(null, null, null, null, null, null);\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n\n  updateDriver() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.driverService.updateDriver(this.newDriver).subscribe(\n      (response) => {\n        if (response.success) {\n          this.notify.showSuccess(\"driver updated successfully\", \"success\");\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\"Unable to contact server.\", \"Operation failed\");\n      },\n      () => {\n        this.isProcessing = false;\n      }\n    );\n  }\n\n  onSearch() {\n    this.drivers = [];\n    this.loadData();\n  }\n\n  onEdit(driver: Driver) {\n    this.setViewMode(ViewModes.EditView);\n    this.newDriver = driver;\n  }\n\n  onDelete(driver: Driver) {\n    let modalInstance = this.messageBox.showWarning(\n      `Are you sure you want to delete ${driver.firstName} ${driver.lastName}?`,\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting vehicle\");\n          this.driverService.deleteDriver(driver).subscribe(\n            (response) => {\n              if (response.success) {\n                let index = this.drivers.findIndex((d) => d.id === driver.id);\n                this.drivers.splice(index, 1);\n                this.notify.showSuccess(\n                  \"driver deleted successfully.\",\n                  \"Success\"\n                );\n              } else {\n                this.notify.showWarning(response.message, \"Operation failed\");\n              }\n            },\n            (reason) => {\n              this.notify.showError(\n                \"we were unable to contact server.\",\n                \"Operation failed\"\n              );\n            },\n            () => {\n              this.notify.hideProcessing(tid);\n            }\n          );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  onViewProfile(driver: Driver) {\n    let modalInstance = this.profilePopup.show(driver);\n    modalInstance.result.then(() => {}).catch(() => {});\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmdvdC1wYXNzd29yZC9mb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport {\n  faArrowCircleLeft,\n  faArrowCircleRight,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { User } from \"../models/user\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { UserService } from \"../services/user.service\";\n\n@Component({\n  selector: \"app-forgot-password\",\n  templateUrl: \"./forgot-password.component.html\",\n  styleUrls: [\"./forgot-password.component.css\"],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  faArrowCircleRight = faArrowCircleRight;\n  faSpinner = faSpinner;\n  faArrowCircleLeft = faArrowCircleLeft;\n\n  resetPassword = {\n    password: \"\",\n    confirmPassword: \"\",\n  };\n  confirmEmail = { email: \"\" };\n  isValidEmail = false;\n  isProcessing = false;\n  user: User;\n\n  constructor(\n    public userService: UserService,\n    public notify: NotificationService,\n    public router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  onConfirmEmail() {\n    if (this.isProcessing) return;\n\n    this.isProcessing = true;\n    this.userService.getUser(this.confirmEmail.email).subscribe(\n      (response) => {\n        this.isProcessing = false;\n        if (response.success) {\n          this.isValidEmail = true;\n          this.user = response.result;\n        } else {\n          this.notify.showError(response.message, \"Not Found\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\n          \"We encountered a problem while contacting server\",\n          \"Operation failed\"\n        );\n      }\n    );\n  }\n\n  onResetPassword() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.user.password = this.resetPassword.password;\n\n    this.userService.updateUser(this.user).subscribe(\n      (response) => {\n        if (response.success) {\n          this.router.navigate([\"/login\"]);\n        } else {\n          this.notify.showWarning(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        console.log(reason);\n        this.notify.showError(\n          \"We encountered a problem while contacting server\",\n          \"Operation failed\"\n        );\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faCheck,\n  faEnvelope,\n  faLock,\n  faSignInAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  loginModel = { email: \"\", password: \"\", model: \"User\" };\n  faCheck = faCheck;\n  faEnvelope = faEnvelope;\n  faLock = faLock;\n  faSignInAlt = faSignInAlt;\n  isProcessing = false;\n\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {}\n\n  onLogin() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.authService.login(\"/\", this.loginModel, () => {\n      this.isProcessing = false;\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2Vib3gvbWVzc2FnZWJveC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faCheckCircle,\n  faExclamation,\n  faExclamationTriangle,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { MessageboxResponse } from \"../models/app-enums\";\n\n@Component({\n  selector: \"app-messagebox\",\n  templateUrl: \"./messagebox.component.html\",\n  styleUrls: [\"./messagebox.component.css\"],\n})\nexport class MessageboxComponent implements OnInit {\n  constructor(private modalInstance: NgbActiveModal) {}\n  faExclamationTriangle = faExclamationTriangle;\n  faCheckCircle = faCheckCircle;\n  faInfoCircle = faInfoCircle;\n\n  ngOnInit() {}\n\n  ok() {\n    this.modalInstance.close(MessageboxResponse.OK);\n  }\n\n  cancel() {\n    this.modalInstance.close(MessageboxResponse.CANCEL);\n  }\n\n  close() {\n    this.modalInstance.close(MessageboxResponse.CLOSE);\n  }\n}\n","export enum ViewModes {\r\n  MainView,\r\n  EditView,\r\n  NewItemView,\r\n}\r\n\r\nexport enum MessageboxResponse {\r\n  CANCEL,\r\n  OK,\r\n  CLOSE,\r\n}\r\n\r\nexport enum MessageboxType {\r\n  WARNING,\r\n  INFO,\r\n  SUCCESS,\r\n}\r\n","export class BreakdownHistory {\r\n  constructor(\r\n    public vehicleId: number,\r\n    public driverId: number,\r\n    public description: string,\r\n    public breakdownDate: string,\r\n    public repairDate?: string,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport class Driver {\r\n  constructor(\r\n    public lastName: string,\r\n    public firstName: string,\r\n    public email: string,\r\n    public maritalStatus: string,\r\n    public mobile: string,\r\n    public imageUrl: string,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","export class Route {\r\n  constructor(\r\n    public departure: string,\r\n    public destination: string,\r\n    public scheduledAt: string,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","import { Driver } from \"./driver\";\r\nimport { Route } from \"./route\";\r\nimport { Vehicle } from \"./vehicle\";\r\n\r\nexport class Tracker {\r\n  constructor(\r\n    public routeId: number,\r\n    public vehicleId: number,\r\n    public driverId: number,\r\n    public Route?: Route,\r\n    public Vehicle?: Vehicle,\r\n    public Driver?: Driver,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","export class User {\r\n  constructor(\r\n    public lastName: string,\r\n    public firstName: string,\r\n    public email: string,\r\n    public maritalStatus: string,\r\n    public mobile: string,\r\n    public imageUrl: string,\r\n    public password?: string,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","export class Vehicle {\r\n  constructor(\r\n    public engineNo: string,\r\n    public capacity: number,\r\n    public fuelId: number,\r\n    public isFunctional?: boolean,\r\n    public id?: number\r\n  ) {}\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUtcG9wdXAvcHJvZmlsZS1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { faIdCard, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"app-profile-popup\",\n  templateUrl: \"./profile-popup.component.html\",\n  styleUrls: [\"./profile-popup.component.css\"],\n})\nexport class ProfilePopupComponent implements OnInit {\n  faTimes = faTimes;\n  faIdCard = faIdCard;\n\n  constructor(private modalInstance: NgbActiveModal) {}\n\n  ngOnInit() {}\n\n  close() {\n    this.modalInstance.close(0);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvdXRlL3JvdXRlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faSearch,\n  faSpinner,\n  faTimes,\n  faTrash,\n  faUser,\n  faRoute,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { Route } from \"../models/route\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { RouteService } from \"../services/route.service\";\n\n@Component({\n  selector: \"app-route\",\n  templateUrl: \"./route.component.html\",\n  styleUrls: [\"./route.component.css\"],\n})\nexport class RouteComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faRoute = faRoute;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faUser = faUser;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  routes: Route[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  newRoute: Route = new Route(null, null, null);\n  isLoading: boolean;\n  isProcessing: boolean;\n  time = {\n    hour: 10,\n    minute: 0,\n  };\n  scheduleChange = new BehaviorSubject<{ hour: number; minute: number }>(\n    this.time\n  );\n\n  constructor(\n    public routeService: RouteService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n\n    if (mode === ViewModes.NewItemView) {\n      this.newRoute = new Route(null, null, null);\n      this.setTime();\n    }\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n    this.routeService.getRoutes(page, this.searchquery).subscribe(\n      (response) => {\n        if (response.result) {\n          this.routes = this.routes.concat(response.result);\n          this.hasMoreData = response.totalPages > response.currentPage;\n          this.currentPage = Number(response.currentPage);\n        } else {\n          // notify\n          this.notify.showWarning(response.message, \"Loading Failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\n          \"we were unable to contact server\",\n          \"Operation failed\"\n        );\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  saveRoute() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.setSchedule();\n    this.routeService.saveRoute(this.newRoute).subscribe((response) => {\n      this.isProcessing = false;\n      if (response.success) {\n        this.routes.push(response.result);\n        this.newRoute = new Route(null, null, null);\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n\n  updateRoute() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.setSchedule();\n\n    this.routeService.updateRoute(this.newRoute).subscribe(\n      (response) => {\n        if (response.success) {\n          this.notify.showSuccess(\"route updated successfully\", \"success\");\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\"Unable to contact server.\", \"Operation failed\");\n      },\n      () => {\n        this.isProcessing = false;\n      }\n    );\n  }\n\n  onSearch() {\n    this.routes = [];\n    this.loadData();\n  }\n\n  onEdit(route: Route) {\n    this.setViewMode(ViewModes.EditView);\n    this.newRoute = route;\n    this.setTime(route.scheduledAt);\n  }\n\n  onDelete(route: Route) {\n    let modalInstance = this.messageBox.showWarning(\n      `Are you sure you want to delete this route?`,\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting route\");\n          this.routeService.deleteRoute(route).subscribe(\n            (response) => {\n              if (response.success) {\n                let index = this.routes.findIndex((r) => r.id === route.id);\n                this.routes.splice(index, 1);\n                this.notify.showSuccess(\n                  \"route deleted successfully.\",\n                  \"Success\"\n                );\n              } else {\n                this.notify.showWarning(response.message, \"Operation failed\");\n              }\n            },\n            (reason) => {\n              this.notify.showError(\n                \"we were unable to contact server.\",\n                \"Operation failed\"\n              );\n            },\n            () => {\n              this.notify.hideProcessing(tid);\n            }\n          );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  setTime(time = \"\") {\n    if (time) {\n      let fullTime = time.split(\" \");\n      let hour = Number(fullTime[0].split(\":\")[0]);\n      let minute = Number(fullTime[0].split(\":\")[1]);\n      let meridan = fullTime[1].toUpperCase();\n      if (meridan === \"PM\" && hour > 12) {\n        hour = Number(hour) - 12;\n      }\n      this.time = {\n        hour,\n        minute,\n      };\n    } else {\n      this.time = {\n        hour: 10,\n        minute: 0,\n      };\n    }\n  }\n\n  getMeridan() {\n    if (this.time.hour >= 12) return \"PM\";\n    else return \"AM\";\n  }\n\n  setSchedule() {\n    this.newRoute.scheduledAt = `${this.time.hour}:${this.time.minute}${\n      this.time.minute < 10 ? 0 : \"\"\n    } ${this.getMeridan()}`;\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.setTime();\n  }\n}\n","import { HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Feedback } from \"../models/feedback\";\nimport { CoreService } from \"./core.service\";\nimport { NotificationService } from \"./notification.service\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { User } from \"../models/user\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService {\n  public userStatus: string;\n  public userStatusChanges: BehaviorSubject<string> = new BehaviorSubject<string>(\n    \"\"\n  );\n  private authApiUrl = \"api/auth/login/\";\n\n  constructor(\n    private coreService: CoreService,\n    private router: Router,\n    private notify: NotificationService,\n    private jwtService: JwtHelperService\n  ) {}\n\n  setUserStatus(userStatus: any): void {\n    this.userStatus = userStatus;\n    this.userStatusChanges.next(userStatus);\n  }\n\n  login(\n    redirectUrl: string,\n    formData: { email: string; password: string; model: string },\n    onComplete: () => void\n  ) {\n    const headers = new HttpHeaders().set(\"Content-Type\", \"application/json\");\n    // send a post request\n    this.coreService\n      .postData<Feedback<string>>(formData, this.authApiUrl, headers)\n      .subscribe(\n        (response) => {\n          if (response.success) {\n            localStorage.setItem(\"access_token\", response.result);\n            this.setUserStatus(response.result);\n            this.router.navigate([redirectUrl]);\n          } else {\n            this.notify.showWarning(response.message, \"Operation failed\");\n          }\n        },\n        (reason) => {\n          this.notify.showError(\n            \"Wrong email and password combination\",\n            \"Operation failed\"\n          );\n          onComplete();\n        },\n        () => {\n          onComplete();\n        }\n      );\n  }\n\n  logout() {\n    // just remove the access token and redirect\n    localStorage.removeItem(\"access_token\");\n    this.setUserStatus(null);\n    this.router.navigate([\"/login\"]);\n  }\n\n  public getUserType(): string {\n    let decoded = this.jwtService.decodeToken(this.userStatus);\n    if (decoded) {\n      return decoded[\"model\"];\n    }\n    return null;\n  }\n\n  public getStatusOnRefresh() {\n    if (localStorage.getItem(\"access_token\")) {\n      let token = localStorage.getItem(\"access_token\");\n      let decoded = this.jwtService.decodeToken(token);\n      if (Math.floor(Date.now() / 1000) > decoded[\"exp\"]) {\n        this.logout();\n      }\n      this.setUserStatus(localStorage.getItem(\"access_token\"));\n    }\n  }\n\n  public getCurrentUser() {\n    return this.coreService.getData<Feedback<User>>(\n      `api/auth/user?authorization=Bearer ${localStorage.getItem(\"access_token\")}`\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { BreakdownHistory } from \"../models/breakdown-history\";\nimport { Feedback } from \"../models/feedback\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BreakdownHistoryService {\n  private apiUrl = \"api/breakdownhistory/\";\n  constructor(private coreService: CoreService) {}\n\n  getHistories(\n    page = 1,\n    searchquery = \"\",\n    engineNo = \"\"\n  ): Observable<Feedback<BreakdownHistory[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&engineno=${engineNo}`\n    );\n  }\n\n  saveHistory(\n    breakdownHistory: BreakdownHistory\n  ): Observable<Feedback<BreakdownHistory>> {\n    return this.coreService.postData(breakdownHistory, this.apiUrl);\n  }\n\n  updateHistory(\n    breakdownHistory: BreakdownHistory\n  ): Observable<Feedback<BreakdownHistory>> {\n    return this.coreService.putData(breakdownHistory, this.apiUrl);\n  }\n\n  deleteHistory(\n    breakdownHistory: BreakdownHistory\n  ): Observable<Feedback<BreakdownHistory>> {\n    return this.coreService.deleteData(breakdownHistory.id, this.apiUrl);\n  }\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class CoreService {\n  private host: string = \"\";\n  constructor(private http: HttpClient) {}\n\n  getData<T>(apiURL: string, headers?: HttpHeaders): Observable<T> {\n    return this.http.get<T>(`${this.host}${apiURL}`, { headers });\n  }\n\n  postData<T>(data: any, apiURL: string, headers?: HttpHeaders): Observable<T> {\n    return this.http.post<T>(`${this.host}${apiURL}`, data, { headers });\n  }\n\n  putData<T>(data, apiURL: string): Observable<T> {\n    return this.http.put<T>(`${this.host}${apiURL}`, data);\n  }\n\n  deleteData<T>(id: number, apiURL: string): Observable<T> {\n    const httpOptions = {\n      headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\n      body: { id },\n    };\n    return this.http.delete<T>(`${this.host}${apiURL}`, httpOptions);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Summary } from \"../models/summary\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DashboardService {\n  private apiUrl = \"api/users/dashboard\";\n  constructor(private coreService: CoreService) {}\n\n  getSummary(): Observable<Feedback<Summary>> {\n    return this.coreService.getData(`${this.apiUrl}`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Driver } from \"../models/driver\";\nimport { Feedback } from \"../models/feedback\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DriverService {\n  private apiUrl = \"api/drivers/\";\n  constructor(private coreService: CoreService) {}\n\n  getDrivers(\n    page = 1,\n    searchquery = \"\",\n    paginate = true\n  ): Observable<Feedback<Driver[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&paginate=${paginate}`\n    );\n  }\n\n  saveDriver(driver: Driver): Observable<Feedback<Driver>> {\n    return this.coreService.postData(driver, this.apiUrl);\n  }\n\n  updateDriver(driver: Driver): Observable<Feedback<Driver>> {\n    return this.coreService.putData(driver, this.apiUrl);\n  }\n\n  deleteDriver(driver: Driver): Observable<Feedback<Driver>> {\n    return this.coreService.deleteData(driver.id, this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Fuel } from \"../models/fuel\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class FuelTypeService {\n  private apiUrl = \"api/fuel/\";\n  constructor(private coreService: CoreService) {}\n\n  getFuelTypes(): Observable<Feedback<Fuel[]>> {\n    return this.coreService.getData<Feedback<Fuel[]>>(this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  NgbActiveModal,\n  NgbModal,\n  NgbModalRef,\n} from \"@ng-bootstrap/ng-bootstrap\";\nimport { MessageboxComponent } from \"../messagebox/messagebox.component\";\nimport { MessageboxType } from \"../models/app-enums\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MessageboxService {\n  constructor(private modal: NgbModal) {}\n\n  createModal(\n    message: string,\n    title: string,\n    type: MessageboxType\n  ): NgbModalRef {\n    let modalInstance = this.modal.open(MessageboxComponent, { size: \"md\" });\n    modalInstance.componentInstance.settings = {\n      message,\n      title,\n      type: MessageboxType.WARNING,\n    };\n\n    return modalInstance;\n  }\n\n  showWarning(message: string, title = \"Warning\"): NgbModalRef {\n    return this.createModal(message, title, MessageboxType.WARNING);\n  }\n\n  showSuccess(message: string, title = \"Success\"): NgbModalRef {\n    return this.createModal(message, title, MessageboxType.SUCCESS);\n  }\n\n  showInfo(message: string, title = \"Information\"): NgbModalRef {\n    return this.createModal(message, title, MessageboxType.INFO);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { NgbToast } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class NotificationService {\n  constructor(private toastr: ToastrService) {}\n\n  activeProcess = [];\n\n  showSuccess(message: string, title: string) {\n    this.toastr.success(message, title);\n  }\n  showError(message: string, title: string) {\n    this.toastr.error(message, title);\n  }\n  showInfo(message: string, title: string) {\n    this.toastr.info(message, title);\n  }\n  showWarning(message: string, title: string) {\n    this.toastr.warning(message, title);\n  }\n\n  showProcessing(message: string) {\n    let active = this.toastr.info(message + \"...\", \"\", {\n      timeOut: 0,\n      progressAnimation: \"increasing\",\n    });\n    return active.toastId;\n  }\n\n  hideProcessing(id: number) {\n    this.toastr.remove(id);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { NgbModal, NgbModalRef } from \"@ng-bootstrap/ng-bootstrap\";\nimport { User } from \"../models/user\";\nimport { ProfilePopupComponent } from \"../profile-popup/profile-popup.component\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProfilePopupService {\n  constructor(private modal: NgbModal) {}\n\n  show(user: User): NgbModalRef {\n    let modalRef = this.modal.open(ProfilePopupComponent, { size: \"md\" });\n    modalRef.componentInstance.user = user;\n    return modalRef;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Route } from \"../models/route\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RouteService {\n  private apiUrl = \"api/routes/\";\n  constructor(private coreService: CoreService) {}\n\n  getRoutes(\n    page = 1,\n    searchquery = \"\",\n    paginate = true\n  ): Observable<Feedback<Route[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&paginate=${paginate}`\n    );\n  }\n\n  saveRoute(route: Route): Observable<Feedback<Route>> {\n    return this.coreService.postData(route, this.apiUrl);\n  }\n\n  updateRoute(route: Route): Observable<Feedback<Route>> {\n    return this.coreService.putData(route, this.apiUrl);\n  }\n\n  deleteRoute(route: Route): Observable<Feedback<Route>> {\n    return this.coreService.deleteData(route.id, this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Tracker } from \"../models/tracker\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TrackerService {\n  private apiUrl = \"api/trackers/\";\n  constructor(private coreService: CoreService) {}\n\n  getTrackers(\n    page = 1,\n    searchquery = \"\",\n    engineNo = \"\"\n  ): Observable<Feedback<Tracker[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&engineno=${engineNo}`\n    );\n  }\n\n  saveTracker(tracker: Tracker): Observable<Feedback<Tracker>> {\n    return this.coreService.postData(tracker, this.apiUrl);\n  }\n\n  updateTracker(tracker: Tracker): Observable<Feedback<Tracker>> {\n    return this.coreService.putData(tracker, this.apiUrl);\n  }\n\n  deleteTracker(tracker: Tracker): Observable<Feedback<Tracker>> {\n    return this.coreService.deleteData(tracker.id, this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { User } from \"../models/user\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService {\n  private apiUrl = \"api/users/\";\n  constructor(private coreService: CoreService) {}\n\n  getUsers(page = 1, searchquery = \"\"): Observable<Feedback<User[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}`\n    );\n  }\n  getUser(email: string): Observable<Feedback<User>> {\n    return this.coreService.getData(`api/user?email=${email}`);\n  }\n\n  saveUser(user: User): Observable<Feedback<User>> {\n    return this.coreService.postData(user, this.apiUrl);\n  }\n\n  updateUser(user: User): Observable<Feedback<User>> {\n    return this.coreService.putData(user, this.apiUrl);\n  }\n\n  deleteUser(user: User): Observable<Feedback<User>> {\n    return this.coreService.deleteData(user.id, this.apiUrl);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Feedback } from \"../models/feedback\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { CoreService } from \"./core.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class VehicleService {\n  private apiUrl = \"api/vehicles/\";\n  constructor(private coreService: CoreService) {}\n\n  getVehicles(\n    page = 1,\n    searchquery = \"\",\n    paginate = true\n  ): Observable<Feedback<Vehicle[]>> {\n    return this.coreService.getData(\n      `${this.apiUrl}?page=${page}&searchquery=${searchquery}&paginate=${paginate}`\n    );\n  }\n\n  saveVehicle(vehicle: Vehicle): Observable<Feedback<Vehicle>> {\n    return this.coreService.postData(vehicle, this.apiUrl);\n  }\n\n  updateVehicle(vehicle: Vehicle): Observable<Feedback<Vehicle>> {\n    return this.coreService.putData(vehicle, this.apiUrl);\n  }\n\n  deleteVehicle(vehicle: Vehicle): Observable<Feedback<Vehicle>> {\n    return this.coreService.deleteData(vehicle.id, this.apiUrl);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faTh,\n  faCarAlt,\n  faUsers,\n  faUser,\n  faRoute,\n  faTimes,\n  faListAlt,\n  faPowerOff,\n  faHistory,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Component({\n  selector: \"app-sidebar\",\n  templateUrl: \"./sidebar.component.html\",\n  styleUrls: [\"./sidebar.component.css\"],\n})\nexport class SidebarComponent implements OnInit {\n  faTh = faTh;\n  faCarAlt = faCarAlt;\n  faUsers = faUsers;\n  faRoute = faRoute;\n  faTimes = faTimes;\n  faListAlt = faListAlt;\n  faPowerOff = faPowerOff;\n  faHistory = faHistory;\n  faUser = faUser;\n  constructor(public authService: AuthService) {}\n\n  ngOnInit() {}\n\n  onLogOut() {\n    this.authService.logout();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWNrZXIvdHJhY2tlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  faCalendarAlt,\n  faCog,\n  faEdit,\n  faEllipsisH,\n  faHistory,\n  faListAlt,\n  faSearch,\n  faSpinner,\n  faTimes,\n  faTrash,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { Driver } from \"../models/driver\";\nimport { Route } from \"../models/route\";\nimport { Tracker } from \"../models/tracker\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { DriverService } from \"../services/driver.service\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { RouteService } from \"../services/route.service\";\nimport { TrackerService } from \"../services/tracker.service\";\nimport { VehicleService } from \"../services/vehicle.service\";\n\n@Component({\n  selector: \"app-tracker\",\n  templateUrl: \"./tracker.component.html\",\n  styleUrls: [\"./tracker.component.css\"],\n})\nexport class TrackerComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faListAlt = faListAlt;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faUser = faUser;\n  faCalendar = faCalendarAlt;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  trackers: Tracker[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  newTracker: Tracker = new Tracker(null, null, null, null);\n  isLoading: boolean;\n  isProcessing: boolean;\n  drivers: Driver[] = [];\n  vehicles: Vehicle[] = [];\n  routes: Route[] = [];\n  engineNo = \"\";\n\n  constructor(\n    public trackerService: TrackerService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService,\n    public driverService: DriverService,\n    public vehicleService: VehicleService,\n    public routeService: RouteService,\n    public route: ActivatedRoute\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n\n    if (mode === ViewModes.NewItemView) {\n      this.newTracker = new Tracker(null, null, null, null);\n    }\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n    this.trackerService\n      .getTrackers(page, this.searchquery, this.engineNo)\n      .subscribe(\n        (response) => {\n          if (response.result) {\n            this.trackers = this.trackers.concat(response.result);\n            this.hasMoreData = response.totalPages > response.currentPage;\n            this.currentPage = Number(response.currentPage);\n          } else {\n            // notify\n            this.notify.showWarning(response.message, \"Loading Failed\");\n          }\n        },\n        (reason) => {\n          this.notify.showError(\n            \"we were unable to contact server\",\n            \"Operation failed\"\n          );\n        },\n        () => {\n          this.isLoading = false;\n        }\n      );\n  }\n\n  saveTracker() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n\n    this.trackerService.saveTracker(this.newTracker).subscribe((response) => {\n      this.isProcessing = false;\n      if (response.success) {\n        this.notify.showSuccess(\"Saved successfully\", \"success\");\n        this.trackers.push(response.result);\n        this.newTracker = new Tracker(null, null, null, null);\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n\n  updateTracker() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n\n    this.trackerService.updateTracker(this.newTracker).subscribe(\n      (response) => {\n        if (response.success) {\n          this.notify.showSuccess(\"updated successfully\", \"success\");\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\"Unable to contact server.\", \"Operation failed\");\n      },\n      () => {\n        this.isProcessing = false;\n      }\n    );\n  }\n\n  onSearch() {\n    this.trackers = [];\n    this.loadData();\n  }\n\n  onEdit(tracker: Tracker) {\n    this.setViewMode(ViewModes.EditView);\n    this.newTracker = tracker;\n  }\n\n  onDelete(tracker: Tracker) {\n    let modalInstance = this.messageBox.showWarning(\n      `Are you sure you want to delete this tracker record?`,\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting history\");\n          this.trackerService.deleteTracker(tracker).subscribe(\n            (response) => {\n              if (response.success) {\n                let index = this.trackers.findIndex((r) => r.id === tracker.id);\n                this.trackers.splice(index, 1);\n                this.notify.showSuccess(\"deleted successfully.\", \"Success\");\n              } else {\n                this.notify.showWarning(response.message, \"Operation failed\");\n              }\n            },\n            (reason) => {\n              this.notify.showError(\n                \"we were unable to contact server.\",\n                \"Operation failed\"\n              );\n            },\n            () => {\n              this.notify.hideProcessing(tid);\n            }\n          );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  ngOnInit() {\n    this.engineNo = this.route.snapshot.params[\"engineNo\"];\n    console.log(this.engineNo);\n    this.loadData();\n    this.driverService.getDrivers(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.drivers = response.result;\n        // console.log(response);\n      }\n    });\n    this.vehicleService.getVehicles(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.vehicles = response.result;\n      }\n    });\n\n    this.routeService.getRoutes(null, \"\", false).subscribe((response) => {\n      if (response.success) {\n        this.routes = response.result;\n      }\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { User } from \"../models/user\";\nimport { AuthService } from \"../services/auth.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { UserService } from \"../services/user.service\";\n\n@Component({\n  selector: \"app-user-profile\",\n  templateUrl: \"./user-profile.component.html\",\n  styleUrls: [\"./user-profile.component.css\"],\n})\nexport class UserProfileComponent implements OnInit {\n  faUser = faUser;\n\n  userProfile: User = new User(null, null, null, null, null, null);\n  password: string;\n  isProcessing = false;\n\n  constructor(\n    public userService: UserService,\n    public authService: AuthService,\n    public notify: NotificationService\n  ) {}\n\n  onUpdate() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    let tid = this.notify.showProcessing(\"Updating profile\");\n    this.userService.updateUser(this.userProfile).subscribe(\n      (response) => {\n        this.userProfile.password = undefined;\n        if (response) {\n          this.notify.showSuccess(\"Profile updated successfully.\", \"Success\");\n        } else {\n          this.notify.showWarning(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        console.log(reason);\n        this.notify.showError(\n          \"we were unable to contact server\",\n          \"Operation failed\"\n        );\n      },\n      () => {\n        this.notify.hideProcessing(tid);\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.authService.getCurrentUser().subscribe(\n      (response) => {\n        console.log(response);\n        if (response.success) {\n          this.userProfile = response.result;\n          this.userProfile.password = undefined;\n        }\n      },\n      (reason) => {\n        console.log(reason);\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZlaGljbGUvdmVoaWNsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport {\n  faSearch,\n  faCog,\n  faCar,\n  faTimes,\n  faEdit,\n  faTrash,\n  faEllipsisH,\n  faSpinner,\n  faHistory,\n  faListAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { MessageboxResponse, ViewModes } from \"../models/app-enums\";\nimport { Fuel } from \"../models/fuel\";\nimport { Vehicle } from \"../models/vehicle\";\nimport { FuelTypeService } from \"../services/fuel-type.service\";\nimport { MessageboxService } from \"../services/messagebox.service\";\nimport { NotificationService } from \"../services/notification.service\";\nimport { VehicleService } from \"../services/vehicle.service\";\n\n@Component({\n  selector: \"app-vehicle\",\n  templateUrl: \"./vehicle.component.html\",\n  styleUrls: [\"./vehicle.component.css\"],\n})\nexport class VehicleComponent implements OnInit {\n  faSearch = faSearch;\n  faCog = faCog;\n  faCar = faCar;\n  faTimes = faTimes;\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faEllipsisH = faEllipsisH;\n  faSpinner = faSpinner;\n  faHistory = faHistory;\n  faListAlt = faListAlt;\n\n  isEditMode: boolean;\n  isMainMode: boolean;\n  isNewItemMode: boolean;\n\n  vehicles: Vehicle[] = [];\n  currentPage: number;\n  searchquery: string;\n  hasMoreData: boolean = false;\n  fuelTypes: Fuel[] = [];\n  newVehicle: Vehicle = {\n    engineNo: \"\",\n    capacity: null,\n    fuelId: null,\n  };\n\n  isLoading: boolean;\n  isProcessing: boolean;\n\n  constructor(\n    public vehicleService: VehicleService,\n    public fuelTypeService: FuelTypeService,\n    public notify: NotificationService,\n    public messageBox: MessageboxService\n  ) {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  setViewMode(mode: ViewModes) {\n    this.isEditMode = mode === ViewModes.EditView;\n    this.isMainMode = mode === ViewModes.MainView;\n    this.isNewItemMode = mode === ViewModes.NewItemView;\n  }\n\n  onBackToMain() {\n    this.setViewMode(ViewModes.MainView);\n  }\n\n  loadData(page = 1) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n\n    this.vehicleService.getVehicles(page, this.searchquery).subscribe(\n      (response) => {\n        if (response.result) {\n          this.vehicles = this.vehicles.concat(response.result);\n          this.hasMoreData = response.totalPages > response.currentPage;\n          this.currentPage = Number(response.currentPage);\n        } else {\n          // notify\n        }\n      },\n      (reason) => {\n        this.notify.showError(\n          \"We were unable to contact server.\",\n          \"Loading failed.\"\n        );\n      },\n      () => {\n        this.isLoading = false;\n      }\n    );\n  }\n\n  saveVehicle() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.vehicleService.saveVehicle(this.newVehicle).subscribe((response) => {\n      this.isProcessing = false;\n      if (response.success) {\n        this.vehicles.push(response.result);\n        this.newVehicle = new Vehicle(\"\", null, null);\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n\n  updateVehicle() {\n    if (this.isProcessing) return;\n    this.isProcessing = true;\n    this.vehicleService.updateVehicle(this.newVehicle).subscribe(\n      (response) => {\n        if (response.success) {\n          this.notify.showSuccess(\"vehicle updated successfully\", \"success\");\n        } else {\n          this.notify.showError(response.message, \"Operation failed\");\n        }\n      },\n      (reason) => {\n        this.notify.showError(\"Unable to contact server.\", \"Operation failed\");\n      },\n      () => {\n        this.isProcessing = false;\n      }\n    );\n  }\n\n  onSearch() {\n    this.vehicles = [];\n    this.loadData();\n  }\n\n  onEdit(vehicle: Vehicle) {\n    this.setViewMode(ViewModes.EditView);\n    this.newVehicle = vehicle;\n  }\n\n  onDelete(vehicle: Vehicle) {\n    let modalInstance = this.messageBox.showWarning(\n      \"Are you sure you want to delete this vehicle?\",\n      \"Delete Warning\"\n    );\n    modalInstance.result\n      .then((response: MessageboxResponse) => {\n        if (response === MessageboxResponse.OK) {\n          let tid = this.notify.showProcessing(\"Deleting vehicle\");\n          this.vehicleService.deleteVehicle(vehicle).subscribe(\n            (response) => {\n              this.notify.hideProcessing(tid);\n              if (response.success) {\n                let index = this.vehicles.findIndex((v) => v.id === vehicle.id);\n                this.vehicles.splice(index, 1);\n                this.notify.showSuccess(\n                  \"vehicle deleted successfully.\",\n                  \"Success\"\n                );\n              } else {\n                this.notify.showWarning(response.message, \"Operation failed\");\n              }\n            },\n            (reason) => {\n              this.notify.showError(\n                \"we were unable to contact server.\",\n                \"Operation failed\"\n              );\n            },\n            () => {}\n          );\n        }\n      })\n      .catch((reason) => {});\n  }\n\n  ngOnInit() {\n    this.loadData();\n    this.fuelTypeService.getFuelTypes().subscribe((response) => {\n      if (response.success) {\n        this.fuelTypes = response.result;\n      } else {\n        this.notify.showError(response.message, \"Operation failed\");\n      }\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}